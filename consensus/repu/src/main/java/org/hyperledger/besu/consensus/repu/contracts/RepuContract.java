/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a80556001600b553480156200001a57600080fd5b5060405162002f0b38038062002f0b833981810160405281019062000040919062000633565b6200005181620000f360201b60201c565b620000616200019d60201b60201c565b600060078190555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000800565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b60018054905081101562000299576200020060018281548110620001c957620001c86200067a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002c460201b60201c565b600080600184815481106200021a57620002196200067a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806200029090620006e2565b915050620001a0565b50620002aa6200036460201b60201c565b60019080519060200190620002c19291906200051b565b50565b6000600b54600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200031591906200075e565b600a54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316200034591906200075e565b6200035191906200075e565b6200035d919062000796565b9050919050565b6060600060018054905067ffffffffffffffff8111156200038a5762000389620007d1565b5b604051908082528060200260200182016040528015620003b95781602001602082028036833780820191505090505b509050600060018054806020026020016040519081016040528092919081815260200182805480156200044257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620003f7575b5050505050905060005b6001805490508110156200051257600080600183815481106200047457620004736200067a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004f057620004ef6200067a565b5b60200260200101818152505080806200050990620006e2565b9150506200044c565b50809250505090565b82805482825590600052602060002090810192821562000597579160200282015b82811115620005965782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200053c565b5b509050620005a69190620005aa565b5090565b5b80821115620005c5576000816000905550600101620005ab565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005fb82620005ce565b9050919050565b6200060d81620005ee565b81146200061957600080fd5b50565b6000815190506200062d8162000602565b92915050565b600080604083850312156200064d576200064c620005c9565b5b60006200065d858286016200061c565b925050602062000670858286016200061c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620006ef82620006d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007245762000723620006a9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200076b82620006d8565b91506200077883620006d8565b9250826200078b576200078a6200072f565b5b828204905092915050565b6000620007a382620006d8565b9150620007b083620006d8565b9250828201905080821115620007cb57620007ca620006a9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126fb80620008106000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063933a9ce8116100a2578063b872953e11610071578063b872953e146102a7578063b9137cca146102d7578063bdf3e088146102f5578063cdd7225314610311578063facd743b1461032f57610116565b8063933a9ce8146102335780639cbfc76514610251578063b28fc6001461026d578063b7ab4db51461028957610116565b8063360b97b9116100e9578063360b97b9146101915780633ea4fa47146101af5780637b778b70146101cb5780637ed21005146101e7578063899c71841461020357610116565b806306a49fce1461011b5780631ba5eec0146101395780632945400c146101435780632e97766d14610173575b600080fd5b61012361035f565b6040516101309190611fae565b60405180910390f35b6101416103ed565b005b61015d60048036038101906101589190612001565b61044f565b60405161016a9190612047565b60405180910390f35b61017b610467565b6040516101889190612047565b60405180910390f35b61019961046f565b6040516101a69190611fae565b60405180910390f35b6101c960048036038101906101c4919061208e565b6104fd565b005b6101e560048036038101906101e091906120bb565b610561565b005b61020160048036038101906101fc91906120bb565b6109d7565b005b61021d60048036038101906102189190612001565b610a09565b60405161022a9190612047565b60405180910390f35b61023b610a21565b604051610248919061210a565b60405180910390f35b61026b60048036038101906102669190612001565b610a4b565b005b6102876004803603810190610282919061208e565b610ab9565b005b610291610b1d565b60405161029e9190611fae565b60405180910390f35b6102c160048036038101906102bc9190612001565b610bab565b6040516102ce9190612047565b60405180910390f35b6102df610bc3565b6040516102ec9190611fae565b60405180910390f35b61030f600480360381019061030a9190612001565b610dbf565b005b610319610f9f565b6040516103269190611fae565b60405180910390f35b61034960048036038101906103449190612001565b61102d565b6040516103569190612140565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103e357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610399575b5050505050905090565b600760008154809291906104009061218a565b9190505550600060056001610413610467565b61041d91906121d2565b6104279190612235565b0361044d576104346110ce565b600760008154809291906104479061218a565b91905055505b565b60056020528060005260406000206000915090505481565b600043905090565b606060068054806020026020016040519081016040528092919081815260200182805480156104f357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104a9575b5050505050905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055757600080fd5b80600a8190555050565b60006005436105709190612235565b146105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906122c3565b60405180910390fd5b60048054905061064633600480548060200260200160405190810160405280929190818152602001828054801561063c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105f2575b50505050506111b1565b14610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d9061232f565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec9061239b565b60405180910390fd5b8260068054905061078c82600680548060200260200160405190810160405280929190818152602001828054801561078257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610738575b50505050506111b1565b146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390612407565b60405180910390fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106108205761081b84611237565b6109d1565b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610972576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b61097b336112b5565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c99190612427565b925050819055505b50505050565b6109df6103ed565b600060056109eb610467565b6109f59190612235565b03610a0557610a048282610561565b5b5050565b60006020528060005260406000206000915090505481565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa557600080fd5b610aae8161134d565b610ab661155f565b50565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1357600080fd5b80600b8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610ba157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b57575b5050505050905090565b60026020528060005260406000206000915090505481565b60606000600180549050600754610bda9190612235565b905060008060018054905067ffffffffffffffff811115610bfe57610bfd61245b565b5b604051908082528060200260200182016040528015610c2c5781602001602082028036833780820191505090505b5090505b600180549050831015610cea5760018381548110610c5157610c5061248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610c8f57610c8e61248a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610cd49061218a565b9350508180610ce29061218a565b925050610c30565b600092505b600180549050600754610d029190612235565b831015610db65760018381548110610d1d57610d1c61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610d5b57610d5a61248a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610da09061218a565b9350508180610dae9061218a565b925050610cef565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906124ce565b90508073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ec3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eba9061256d565b60405180910390fd5b82610ecd8161166a565b610f0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f03906125d9565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610f67919061210a565b600060405180830381600087803b158015610f8157600080fd5b505af1158015610f95573d6000803e3d6000fd5b5050505050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561102357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610fd9575b5050505050905090565b60006001805490506110c58360018054806020026020016040519081016040528092919081815260200182805480156110bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611071575b50505050506111b1565b14159050919050565b60006110d861168d565b9050600360006110e89190611df6565b60005b60048054905081101561118e57600060026000600484815481106111125761111161248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806111869061218a565b9150506110eb565b506004600061119d9190611df6565b6111a681611888565b6111ae61155f565b50565b600080600090505b825181101561122b578373ffffffffffffffffffffffffffffffffffffffff168382815181106111ec576111eb61248a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036112185780915050611231565b80806112239061218a565b9150506111b9565b50815190505b92915050565b6006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112a38161102d565b156112b2576112b18161134d565b5b50565b6000600b54600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461130491906125f9565b600a54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff163161133291906125f9565b61133c91906125f9565b6113469190612427565b9050919050565b60006113df8260018054806020026020016040519081016040528092919081815260200182805480156113d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161138b575b50505050506111b1565b90506001805490508110611428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141f90612676565b60405180910390fd5b600180808054905061143a91906121d2565b8154811061144b5761144a61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001828154811061148a5761148961248a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054806114e4576114e3612696565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b600180549050811015611649576115b6600182815481106115865761158561248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166112b5565b600080600184815481106115cd576115cc61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806116419061218a565b915050611562565b50611652611ba5565b60019080519060200190611667929190611e17565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff8111156116b0576116af61245b565b5b6040519080825280602002602001820160405280156116de5781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff8111156117025761170161245b565b5b6040519080825280602002602001820160405280156117305781602001602082028036833780820191505090505b50905060005b60038054905081101561187f57600260006003838154811061175b5761175a61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548382815181106117d4576117d361248a565b5b602002602001018181525050600381815481106117f4576117f361248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106118325761183161248a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806118779061218a565b915050611736565b50809250505090565b6000805b82518110801561189c5750600282105b15611a8f576000600560008584815181106118ba576118b961248a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180156119b757506006805490506119b58483815181106119215761192061248a565b5b602002602001015160068054806020026020016040519081016040528092919081815260200182805480156119ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611961575b50505050506111b1565b145b15611a7c576119df8382815181106119d2576119d161248a565b5b602002602001015161102d565b15611a0c57611a078382815181106119fa576119f961248a565b5b602002602001015161134d565b611a6d565b600281600180549050611a1f9190612427565b03611a6c576001805480611a3657611a35612696565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611a789061218a565b9250505b8080611a879061218a565b91505061188c565b5060005b825181108015611aa35750600281105b15611ba057600060056000858481518110611ac157611ac061248a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611b8d57611b2d838281518110611b2057611b1f61248a565b5b6020026020010151611d4c565b600060026000858481518110611b4657611b4561248a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611b989061218a565b915050611a93565b505050565b6060600060018054905067ffffffffffffffff811115611bc857611bc761245b565b5b604051908082528060200260200182016040528015611bf65781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611c7d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c33575b5050505050905060005b600180549050811015611d435760008060018381548110611cab57611caa61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611d2457611d2361248a565b5b6020026020010181815250508080611d3b9061218a565b915050611c87565b50809250505090565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b5080546000825590600052602060002090810190611e149190611ea1565b50565b828054828255906000526020600020908101928215611e90579160200282015b82811115611e8f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611e37565b5b509050611e9d9190611ea1565b5090565b5b80821115611eba576000816000905550600101611ea2565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f1582611eea565b9050919050565b611f2581611f0a565b82525050565b6000611f378383611f1c565b60208301905092915050565b6000602082019050919050565b6000611f5b82611ebe565b611f658185611ec9565b9350611f7083611eda565b8060005b83811015611fa1578151611f888882611f2b565b9750611f9383611f43565b925050600181019050611f74565b5085935050505092915050565b60006020820190508181036000830152611fc88184611f50565b905092915050565b600080fd5b611fde81611f0a565b8114611fe957600080fd5b50565b600081359050611ffb81611fd5565b92915050565b60006020828403121561201757612016611fd0565b5b600061202584828501611fec565b91505092915050565b6000819050919050565b6120418161202e565b82525050565b600060208201905061205c6000830184612038565b92915050565b61206b8161202e565b811461207657600080fd5b50565b60008135905061208881612062565b92915050565b6000602082840312156120a4576120a3611fd0565b5b60006120b284828501612079565b91505092915050565b600080604083850312156120d2576120d1611fd0565b5b60006120e085828601611fec565b92505060206120f185828601612079565b9150509250929050565b61210481611f0a565b82525050565b600060208201905061211f60008301846120fb565b92915050565b60008115159050919050565b61213a81612125565b82525050565b60006020820190506121556000830184612131565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121958261202e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121c7576121c661215b565b5b600182019050919050565b60006121dd8261202e565b91506121e88361202e565b9250828203905081811115612200576121ff61215b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122408261202e565b915061224b8361202e565b92508261225b5761225a612206565b5b828206905092915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b60006122ad601483612266565b91506122b882612277565b602082019050919050565b600060208201905081810360008301526122dc816122a0565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b6000612319601783612266565b9150612324826122e3565b602082019050919050565b600060208201905081810360008301526123488161230c565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b6000612385601b83612266565b91506123908261234f565b602082019050919050565b600060208201905081810360008301526123b481612378565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b60006123f1601983612266565b91506123fc826123bb565b602082019050919050565b60006020820190508181036000830152612420816123e4565b9050919050565b60006124328261202e565b915061243d8361202e565b92508282019050808211156124555761245461215b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506124c881611fd5565b92915050565b6000602082840312156124e4576124e3611fd0565b5b60006124f2848285016124b9565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612557602583612266565b9150612562826124fb565b604082019050919050565b600060208201905081810360008301526125868161254a565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b60006125c3601983612266565b91506125ce8261258d565b602082019050919050565b600060208201905081810360008301526125f2816125b6565b9050919050565b60006126048261202e565b915061260f8361202e565b92508261261f5761261e612206565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b6000612660601483612266565b915061266b8261262a565b602082019050919050565b6000602082019050818103600083015261268f81612653565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212203d08cde05ac89098826d0d155220b12eb795f843e9a21cda873bd1d45978321264736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;
  private static final Logger LOG = LoggerFactory.getLogger(RepuContract.class);

  public RepuContract(
          String contractAddress,
          Web3j web3j,
          Credentials credentials,
          ContractGasProvider contractGasProvider,
          ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          String contractAddress,
          Web3j web3j,
          Credentials credentials,
          ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(String address, BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(String address, BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS), new Address(INITIAL_VALIDATOR))));
  }

  public void setProxyContract(ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(String address) throws Exception { return this.isValidatorCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(String address, BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(String address, BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
