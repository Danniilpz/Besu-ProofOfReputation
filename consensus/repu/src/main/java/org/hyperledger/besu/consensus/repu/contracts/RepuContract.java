/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a600b556001600c553480156200001b57600080fd5b50604051620034c8380380620034c8833981810160405281019062000041919062000899565b6200005281620000f460201b60201c565b620000626200019e60201b60201c565b600060088190555081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000aa1565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b6001805490508110156200029a576200020160018281548110620001ca57620001c9620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002c560201b60201c565b600080600184815481106200021b576200021a620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620002919062000948565b915050620001a1565b50620002ab6200036560201b60201c565b60019080519060200190620002c292919062000781565b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003169190620009c4565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff1631620003469190620009c4565b620003529190620009c4565b6200035e9190620009fc565b9050919050565b6060600060018054905067ffffffffffffffff8111156200038b576200038a62000a37565b5b604051908082528060200260200182016040528015620003ba5781602001602082028036833780820191505090505b509050600060018054806020026020016040519081016040528092919081815260200182805480156200044357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620003f8575b5050505050905060005b600180549050811015620005135760008060018381548110620004755762000474620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004f157620004f0620008e0565b5b60200260200101818152505080806200050a9062000948565b9150506200044d565b506200052682826200052e60201b60201c565b809250505090565b60008251905060008060005b8381101562000779576000600190505b818562000558919062000a66565b8110156200076257868181518110620005765762000575620008e0565b5b6020026020010151876001836200058e919062000a66565b81518110620005a257620005a1620008e0565b5b602002602001015110156200074c5786600182620005c1919062000a66565b81518110620005d557620005d4620008e0565b5b6020026020010151935085600182620005ef919062000a66565b81518110620006035762000602620008e0565b5b60200260200101519250868181518110620006235762000622620008e0565b5b6020026020010151876001836200063b919062000a66565b815181106200064f576200064e620008e0565b5b602002602001018181525050858181518110620006715762000670620008e0565b5b60200260200101518660018362000689919062000a66565b815181106200069d576200069c620008e0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110620006ee57620006ed620008e0565b5b60200260200101818152505082868281518110620007115762000710620008e0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620007599062000948565b9150506200054a565b508080620007709062000948565b9150506200053a565b505050505050565b828054828255906000526020600020908101928215620007fd579160200282015b82811115620007fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620007a2565b5b5090506200080c919062000810565b5090565b5b808211156200082b57600081600090555060010162000811565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008618262000834565b9050919050565b620008738162000854565b81146200087f57600080fd5b50565b600081519050620008938162000868565b92915050565b60008060408385031215620008b357620008b26200082f565b5b6000620008c38582860162000882565b9250506020620008d68582860162000882565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000955826200093e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200098a57620009896200090f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620009d1826200093e565b9150620009de836200093e565b925082620009f157620009f062000995565b5b828204905092915050565b600062000a09826200093e565b915062000a16836200093e565b925082820190508082111562000a315762000a306200090f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062000a73826200093e565b915062000a80836200093e565b925082820390508181111562000a9b5762000a9a6200090f565b5b92915050565b612a178062000ab16000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063933a9ce8116100a2578063b872953e11610071578063b872953e146102a7578063b9137cca146102d7578063bdf3e088146102f5578063cdd7225314610311578063facd743b1461032f57610116565b8063933a9ce8146102335780639cbfc76514610251578063b28fc6001461026d578063b7ab4db51461028957610116565b8063360b97b9116100e9578063360b97b9146101915780633ea4fa47146101af5780637b778b70146101cb5780637ed21005146101e7578063899c71841461020357610116565b806306a49fce1461011b5780631ba5eec0146101395780632945400c146101435780632e97766d14610173575b600080fd5b61012361035f565b60405161013091906122ca565b60405180910390f35b6101416103ed565b005b61015d6004803603810190610158919061231d565b6104b9565b60405161016a9190612363565b60405180910390f35b61017b6104d1565b6040516101889190612363565b60405180910390f35b6101996104d9565b6040516101a691906122ca565b60405180910390f35b6101c960048036038101906101c491906123aa565b610567565b005b6101e560048036038101906101e091906123d7565b6105cb565b005b61020160048036038101906101fc91906123d7565b610a41565b005b61021d6004803603810190610218919061231d565b610a73565b60405161022a9190612363565b60405180910390f35b61023b610a8b565b6040516102489190612426565b60405180910390f35b61026b6004803603810190610266919061231d565b610ab5565b005b610287600480360381019061028291906123aa565b610b23565b005b610291610b87565b60405161029e91906122ca565b60405180910390f35b6102c160048036038101906102bc919061231d565b610c15565b6040516102ce9190612363565b60405180910390f35b6102df610c2d565b6040516102ec91906122ca565b60405180910390f35b61030f600480360381019061030a919061231d565b610e29565b005b610319611009565b60405161032691906122ca565b60405180910390f35b6103496004803603810190610344919061231d565b611097565b604051610356919061245c565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103e357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610399575b5050505050905090565b6103f633611097565b8061044e5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61045757600080fd5b6008600081548092919061046a906124a6565b919050555060006005600161047d6104d1565b61048791906124ee565b6104919190612551565b036104b75761049e611138565b600860008154809291906104b1906124a6565b91905055505b565b60066020528060005260406000206000915090505481565b600043905090565b6060600780548060200260200160405190810160405280929190818152602001828054801561055d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610513575b5050505050905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c157600080fd5b80600b8190555050565b60006005436105da9190612551565b1461061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906125df565b60405180910390fd5b6004805490506106b03360048054806020026020016040519081016040528092919081815260200182805480156106a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065c575b505050505061125c565b146106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e79061264b565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906126b7565b60405180910390fd5b826007805490506107f68260078054806020026020016040519081016040528092919081815260200182805480156107ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a2575b505050505061125c565b14610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90612723565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061088a57610885846112e2565b610a3b565b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036109dc576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6109e533611360565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a339190612743565b925050819055505b50505050565b610a496103ed565b60006005610a556104d1565b610a5f9190612551565b03610a6f57610a6e82826105cb565b5b5050565b60006020528060005260406000206000915090505481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0f57600080fd5b610b18816113f8565b610b2061160a565b50565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7d57600080fd5b80600c8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c0b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bc1575b5050505050905090565b60026020528060005260406000206000915090505481565b60606000600180549050600854610c449190612551565b905060008060018054905067ffffffffffffffff811115610c6857610c67612777565b5b604051908082528060200260200182016040528015610c965781602001602082028036833780820191505090505b5090505b600180549050831015610d545760018381548110610cbb57610cba6127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610cf957610cf86127a6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610d3e906124a6565b9350508180610d4c906124a6565b925050610c9a565b600092505b600180549050600854610d6c9190612551565b831015610e205760018381548110610d8757610d866127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610dc557610dc46127a6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e0a906124a6565b9350508180610e18906124a6565b925050610d59565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b91906127ea565b90508073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2490612889565b60405180910390fd5b82610f3781611715565b610f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d906128f5565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610fd19190612426565b600060405180830381600087803b158015610feb57600080fd5b505af1158015610fff573d6000803e3d6000fd5b5050505050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561108d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611043575b5050505050905090565b600060018054905061112f83600180548060200260200160405190810160405280929190818152602001828054801561112557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110db575b505050505061125c565b14159050919050565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611183611738565b9050600360006111939190612112565b60005b60048054905081101561123957600060026000600484815481106111bd576111bc6127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080611231906124a6565b915050611196565b50600460006112489190612112565b6112518161193d565b61125961160a565b50565b600080600090505b82518110156112d6578373ffffffffffffffffffffffffffffffffffffffff16838281518110611297576112966127a6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036112c357809150506112dc565b80806112ce906124a6565b915050611264565b50815190505b92915050565b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061134e81611097565b1561135d5761135c816113f8565b5b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113af9190612915565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316113dd9190612915565b6113e79190612915565b6113f19190612743565b9050919050565b600061148a82600180548060200260200160405190810160405280929190818152602001828054801561148057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611436575b505050505061125c565b905060018054905081106114d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ca90612992565b60405180910390fd5b60018080805490506114e591906124ee565b815481106114f6576114f56127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110611535576115346127a6565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061158f5761158e6129b2565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b6001805490508110156116f45761166160018281548110611631576116306127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611360565b60008060018481548110611678576116776127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806116ec906124a6565b91505061160d565b506116fd611c97565b60019080519060200190611712929190612133565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff81111561175b5761175a612777565b5b6040519080825280602002602001820160405280156117895781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff8111156117ad576117ac612777565b5b6040519080825280602002602001820160405280156117db5781602001602082028036833780820191505090505b50905060005b60038054905081101561192a576002600060038381548110611806576118056127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061187f5761187e6127a6565b5b6020026020010181815250506003818154811061189f5761189e6127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106118dd576118dc6127a6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611922906124a6565b9150506117e1565b506119358282611e48565b809250505090565b6000805b8251811080156119515750600582105b15611b815760006006600085848151811061196f5761196e6127a6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015611a6c5750600780549050611a6a8483815181106119d6576119d56127a6565b5b60200260200101516007805480602002602001604051908101604052809291908181526020018280548015611a6057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a16575b505050505061125c565b145b8015611aa957506000838281518110611a8857611a876127a6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631115b15611b6e57611ad1838281518110611ac457611ac36127a6565b5b6020026020010151611097565b15611afe57611af9838281518110611aec57611aeb6127a6565b5b60200260200101516113f8565b611b5f565b600581600180549050611b119190612743565b03611b5e576001805480611b2857611b276129b2565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611b6a906124a6565b9250505b8080611b79906124a6565b915050611941565b5060005b825181108015611b955750600581105b15611c9257600060066000858481518110611bb357611bb26127a6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611c7f57611c1f838281518110611c1257611c116127a6565b5b6020026020010151612068565b600060026000858481518110611c3857611c376127a6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611c8a906124a6565b915050611b85565b505050565b6060600060018054905067ffffffffffffffff811115611cba57611cb9612777565b5b604051908082528060200260200182016040528015611ce85781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611d6f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d25575b5050505050905060005b600180549050811015611e355760008060018381548110611d9d57611d9c6127a6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611e1657611e156127a6565b5b6020026020010181815250508080611e2d906124a6565b915050611d79565b50611e408282611e48565b809250505090565b60008251905060008060005b83811015612060576000600190505b8185611e6f91906124ee565b81101561204c57868181518110611e8957611e886127a6565b5b602002602001015187600183611e9f91906124ee565b81518110611eb057611eaf6127a6565b5b602002602001015110156120395786600182611ecc91906124ee565b81518110611edd57611edc6127a6565b5b6020026020010151935085600182611ef591906124ee565b81518110611f0657611f056127a6565b5b60200260200101519250868181518110611f2357611f226127a6565b5b602002602001015187600183611f3991906124ee565b81518110611f4a57611f496127a6565b5b602002602001018181525050858181518110611f6957611f686127a6565b5b602002602001015186600183611f7f91906124ee565b81518110611f9057611f8f6127a6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110611fde57611fdd6127a6565b5b60200260200101818152505082868281518110611ffe57611ffd6127a6565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080612044906124a6565b915050611e63565b508080612058906124a6565b915050611e54565b505050505050565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b508054600082559060005260206000209081019061213091906121bd565b50565b8280548282559060005260206000209081019282156121ac579160200282015b828111156121ab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612153565b5b5090506121b991906121bd565b5090565b5b808211156121d65760008160009055506001016121be565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061223182612206565b9050919050565b61224181612226565b82525050565b60006122538383612238565b60208301905092915050565b6000602082019050919050565b6000612277826121da565b61228181856121e5565b935061228c836121f6565b8060005b838110156122bd5781516122a48882612247565b97506122af8361225f565b925050600181019050612290565b5085935050505092915050565b600060208201905081810360008301526122e4818461226c565b905092915050565b600080fd5b6122fa81612226565b811461230557600080fd5b50565b600081359050612317816122f1565b92915050565b600060208284031215612333576123326122ec565b5b600061234184828501612308565b91505092915050565b6000819050919050565b61235d8161234a565b82525050565b60006020820190506123786000830184612354565b92915050565b6123878161234a565b811461239257600080fd5b50565b6000813590506123a48161237e565b92915050565b6000602082840312156123c0576123bf6122ec565b5b60006123ce84828501612395565b91505092915050565b600080604083850312156123ee576123ed6122ec565b5b60006123fc85828601612308565b925050602061240d85828601612395565b9150509250929050565b61242081612226565b82525050565b600060208201905061243b6000830184612417565b92915050565b60008115159050919050565b61245681612441565b82525050565b6000602082019050612471600083018461244d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124b18261234a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124e3576124e2612477565b5b600182019050919050565b60006124f98261234a565b91506125048361234a565b925082820390508181111561251c5761251b612477565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061255c8261234a565b91506125678361234a565b92508261257757612576612522565b5b828206905092915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b60006125c9601483612582565b91506125d482612593565b602082019050919050565b600060208201905081810360008301526125f8816125bc565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b6000612635601783612582565b9150612640826125ff565b602082019050919050565b6000602082019050818103600083015261266481612628565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b60006126a1601b83612582565b91506126ac8261266b565b602082019050919050565b600060208201905081810360008301526126d081612694565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b600061270d601983612582565b9150612718826126d7565b602082019050919050565b6000602082019050818103600083015261273c81612700565b9050919050565b600061274e8261234a565b91506127598361234a565b925082820190508082111561277157612770612477565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506127e4816122f1565b92915050565b600060208284031215612800576127ff6122ec565b5b600061280e848285016127d5565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612873602583612582565b915061287e82612817565b604082019050919050565b600060208201905081810360008301526128a281612866565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b60006128df601983612582565b91506128ea826128a9565b602082019050919050565b6000602082019050818103600083015261290e816128d2565b9050919050565b60006129208261234a565b915061292b8361234a565b92508261293b5761293a612522565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b600061297c601483612582565b915061298782612946565b602082019050919050565b600060208201905081810360008301526129ab8161296f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220980caf0710c3744ce39f5721de10097802700ae16b37811aff94dc0037afd85464736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static final String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static final String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider,
          final ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          final Web3j web3j, final Credentials credentials, final ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS), new Address(INITIAL_VALIDATOR))));
  }

  public void setProxyContract(final ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(final String address) throws Exception { return this.isValidatorCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(final String address, final BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(final String address, final BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
