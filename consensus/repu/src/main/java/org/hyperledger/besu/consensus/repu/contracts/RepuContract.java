/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "60806040526127106009556001600a553480156200001c57600080fd5b5060405162002ff838038062002ff883398181016040528101906200004291906200098d565b62000053816200011a60201b60201c565b62000078732ed64d60e50f820b240eb5905b0a73848b2506d66200011a60201b60201c565b62000088620001c460201b60201c565b600060068190555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000bc3565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b600180549050811015620002c0576200022760018281548110620001f057620001ef620009d4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002eb60201b60201c565b60008060018481548110620002415762000240620009d4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620002b79062000a3c565b915050620001c7565b50620002d16200038b60201b60201c565b60019080519060200190620002e892919062000875565b50565b6000600a54600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200033c919062000ab8565b600954670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316200036c919062000ab8565b62000378919062000ab8565b62000384919062000af0565b9050919050565b6060600060018054905067ffffffffffffffff811115620003b157620003b062000b2b565b5b604051908082528060200260200182016040528015620003e05781602001602082028036833780820191505090505b509050600060018054905067ffffffffffffffff81111562000407576200040662000b2b565b5b604051908082528060200260200182016040528015620004365781602001602082028036833780820191505090505b50905060005b600180549050811015620005945760008060018381548110620004645762000463620009d4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004e057620004df620009d4565b5b60200260200101818152505060018181548110620005035762000502620009d4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110620005445762000543620009d4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806200058b9062000a3c565b9150506200043c565b50620005b98282600060018551620005ad919062000b5a565b620005c160201b60201c565b809250505090565b60008290506000829050808203620005db5750506200086f565b60008660028686620005ee919062000b5a565b620005fa919062000ab8565b8662000607919062000af0565b815181106200061b576200061a620009d4565b5b602002602001015190505b8183116200082f575b80878481518110620006465762000645620009d4565b5b602002602001015111156200066b578280620006629062000a3c565b9350506200062f565b5b868281518110620006825762000681620009d4565b5b6020026020010151811115620006a85781806200069f9062000b95565b9250506200066c565b8183116200082957868281518110620006c657620006c5620009d4565b5b6020026020010151878481518110620006e457620006e3620009d4565b5b6020026020010151888581518110620007025762000701620009d4565b5b602002602001018985815181106200071f576200071e620009d4565b5b6020026020010182815250828152505050858281518110620007465762000745620009d4565b5b6020026020010151868481518110620007645762000763620009d4565b5b6020026020010151878581518110620007825762000781620009d4565b5b602002602001018885815181106200079f576200079e620009d4565b5b602002602001018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050508280620008159062000a3c565b9350508180620008259062000b95565b9250505b62000626565b818510156200084d576200084c87878785620005c160201b60201c565b5b838310156200086b576200086a87878587620005c160201b60201c565b5b5050505b50505050565b828054828255906000526020600020908101928215620008f1579160200282015b82811115620008f05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000896565b5b50905062000900919062000904565b5090565b5b808211156200091f57600081600090555060010162000905565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009558262000928565b9050919050565b620009678162000948565b81146200097357600080fd5b50565b60008151905062000987816200095c565b92915050565b60008060408385031215620009a757620009a662000923565b5b6000620009b78582860162000976565b9250506020620009ca8582860162000976565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000a498262000a32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000a7e5762000a7d62000a03565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000ac58262000a32565b915062000ad28362000a32565b92508262000ae55762000ae462000a89565b5b828204905092915050565b600062000afd8262000a32565b915062000b0a8362000a32565b925082820190508082111562000b255762000b2462000a03565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062000b678262000a32565b915062000b748362000a32565b925082820390508181111562000b8f5762000b8e62000a03565b5b92915050565b600062000ba28262000a32565b91506000820362000bb85762000bb762000a03565b5b600182039050919050565b6124258062000bd36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639cbfc76511610097578063b9137cca11610066578063b9137cca14610287578063bdf3e088146102a5578063cdd72253146102c1578063facd743b146102df57610100565b80639cbfc76514610201578063b28fc6001461021d578063b7ab4db514610239578063b872953e1461025757610100565b80633ea4fa47116100d35780633ea4fa471461017b5780637b778b7014610197578063899c7184146101b3578063933a9ce8146101e357610100565b806306a49fce146101055780631ba5eec0146101235780632945400c1461012d5780632e97766d1461015d575b600080fd5b61010d61030f565b60405161011a9190611d1b565b60405180910390f35b61012b61039d565b005b61014760048036038101906101429190611d6e565b6103e7565b6040516101549190611db4565b60405180910390f35b6101656103ff565b6040516101729190611db4565b60405180910390f35b61019560048036038101906101909190611dfb565b610407565b005b6101b160048036038101906101ac9190611e28565b61046b565b005b6101cd60048036038101906101c89190611d6e565b610764565b6040516101da9190611db4565b60405180910390f35b6101eb61077c565b6040516101f89190611e77565b60405180910390f35b61021b60048036038101906102169190611d6e565b6107a6565b005b61023760048036038101906102329190611dfb565b6109c0565b005b610241610a24565b60405161024e9190611d1b565b60405180910390f35b610271600480360381019061026c9190611d6e565b610ab2565b60405161027e9190611db4565b60405180910390f35b61028f610aca565b60405161029c9190611d1b565b60405180910390f35b6102bf60048036038101906102ba9190611d6e565b610cc6565b005b6102c9610ea6565b6040516102d69190611d1b565b60405180910390f35b6102f960048036038101906102f49190611d6e565b610f34565b6040516103069190611ead565b60405180910390f35b6060600380548060200260200160405190810160405280929190818152602001828054801561039357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610349575b5050505050905090565b6000600560026103ab6103ff565b6103b59190611ef7565b6103bf9190611f5a565b036103cd576103cc610fd5565b5b600660008154809291906103e090611f8b565b9190505550565b60056020528060005260406000206000915090505481565b600043905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046157600080fd5b8060098190555050565b6004805490506105013360048054806020026020016040519081016040528092919081815260200182805480156104f757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104ad575b5050505050611011565b14610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890612030565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a79061209c565b60405180910390fd5b6105b8611097565b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361070a576003839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061075a90611f8b565b9190505550505050565b60006020528060005260406000206000915090505481565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061083882600180548060200260200160405190810160405280929190818152602001828054801561082e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107e4575b5050505050611011565b90506001805490508110610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890612108565b60405180910390fd5b60018080805490506108939190611ef7565b815481106108a4576108a3612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106108e3576108e2612128565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061093d5761093c612157565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556109bc6110f4565b5050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1a57600080fd5b80600a8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610aa857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a5e575b5050505050905090565b60026020528060005260406000206000915090505481565b60606000600180549050600654610ae19190611f5a565b905060008060018054905067ffffffffffffffff811115610b0557610b04612186565b5b604051908082528060200260200182016040528015610b335781602001602082028036833780820191505090505b5090505b600180549050831015610bf15760018381548110610b5857610b57612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610b9657610b95612128565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610bdb90611f8b565b9350508180610be990611f8b565b925050610b37565b600092505b600180549050600654610c099190611f5a565b831015610cbd5760018381548110610c2457610c23612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610c6257610c61612128565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610ca790611f8b565b9350508180610cb590611f8b565b925050610bf6565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3891906121ca565b90508073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc190612269565b60405180910390fd5b82610dd4816111ff565b610e13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0a906122d5565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610e6e9190611e77565b600060405180830381600087803b158015610e8857600080fd5b505af1158015610e9c573d6000803e3d6000fd5b5050505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015610f2a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ee0575b5050505050905090565b6000600180549050610fcc836001805480602002602001604051908101604052809291908181526020018280548015610fc257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f78575b5050505050611011565b14159050919050565b6000610fdf611222565b905060036000610fef9190611b63565b60046000610ffd9190611b63565b6110068161141d565b61100e6110f4565b50565b600080600090505b825181101561108b578373ffffffffffffffffffffffffffffffffffffffff1683828151811061104c5761104b612128565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036110785780915050611091565b808061108390611f8b565b915050611019565b50815190505b92915050565b600060056001436110a89190611ef7565b6110b29190611f5a565b146110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e990612341565b60405180910390fd5b565b60005b6001805490508110156111de5761114b6001828154811061111b5761111a612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166115a3565b6000806001848154811061116257611161612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806111d690611f8b565b9150506110f7565b506111e761163b565b600190805190602001906111fc929190611b84565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff81111561124557611244612186565b5b6040519080825280602002602001820160405280156112735781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff81111561129757611296612186565b5b6040519080825280602002602001820160405280156112c55781602001602082028036833780820191505090505b50905060005b6003805490508110156114145760026000600383815481106112f0576112ef612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061136957611368612128565b5b6020026020010181815250506003818154811061138957611388612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106113c7576113c6612128565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061140c90611f8b565b9150506112cb565b50809250505090565b600281511061143957600160006114349190611b63565b6114f2565b60005b81518110156114f05761146882828151811061145b5761145a612128565b5b6020026020010151610f34565b156114955761149082828151811061148357611482612128565b5b60200260200101516107a6565b6114dd565b60018054806114a7576114a6612157565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b80806114e890611f8b565b91505061143c565b505b60005b8151811080156115055750600281105b1561159f5761152d8282815181106115205761151f612128565b5b602002602001015161184f565b60006002600084848151811061154657611545612128565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061159790611f8b565b9150506114f5565b5050565b6000600a54600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f29190612361565b600954670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316116209190612361565b61162a9190612361565b6116349190612392565b9050919050565b6060600060018054905067ffffffffffffffff81111561165e5761165d612186565b5b60405190808252806020026020018201604052801561168c5781602001602082028036833780820191505090505b509050600060018054905067ffffffffffffffff8111156116b0576116af612186565b5b6040519080825280602002602001820160405280156116de5781602001602082028036833780820191505090505b50905060005b60018054905081101561182c576000806001838154811061170857611707612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061178157611780612128565b5b602002602001018181525050600181815481106117a1576117a0612128565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106117df576117de612128565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061182490611f8b565b9150506116e4565b5061184782826000600185516118429190611ef7565b6118f9565b809250505090565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60008290506000829050808203611911575050611b5d565b600086600286866119229190611ef7565b61192c9190612361565b866119379190612392565b8151811061194857611947612128565b5b602002602001015190505b818311611b2f575b8087848151811061196f5761196e612128565b5b6020026020010151111561199057828061198890611f8b565b93505061195b565b5b8682815181106119a4576119a3612128565b5b60200260200101518111156119c65781806119be906123c6565b925050611991565b818311611b2a578682815181106119e0576119df612128565b5b60200260200101518784815181106119fb576119fa612128565b5b6020026020010151888581518110611a1657611a15612128565b5b60200260200101898581518110611a3057611a2f612128565b5b6020026020010182815250828152505050858281518110611a5457611a53612128565b5b6020026020010151868481518110611a6f57611a6e612128565b5b6020026020010151878581518110611a8a57611a89612128565b5b60200260200101888581518110611aa457611aa3612128565b5b602002602001018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050508280611b1890611f8b565b9350508180611b26906123c6565b9250505b611953565b81851015611b4457611b43878787856118f9565b5b83831015611b5957611b58878785876118f9565b5b5050505b50505050565b5080546000825590600052602060002090810190611b819190611c0e565b50565b828054828255906000526020600020908101928215611bfd579160200282015b82811115611bfc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611ba4565b5b509050611c0a9190611c0e565b5090565b5b80821115611c27576000816000905550600101611c0f565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8282611c57565b9050919050565b611c9281611c77565b82525050565b6000611ca48383611c89565b60208301905092915050565b6000602082019050919050565b6000611cc882611c2b565b611cd28185611c36565b9350611cdd83611c47565b8060005b83811015611d0e578151611cf58882611c98565b9750611d0083611cb0565b925050600181019050611ce1565b5085935050505092915050565b60006020820190508181036000830152611d358184611cbd565b905092915050565b600080fd5b611d4b81611c77565b8114611d5657600080fd5b50565b600081359050611d6881611d42565b92915050565b600060208284031215611d8457611d83611d3d565b5b6000611d9284828501611d59565b91505092915050565b6000819050919050565b611dae81611d9b565b82525050565b6000602082019050611dc96000830184611da5565b92915050565b611dd881611d9b565b8114611de357600080fd5b50565b600081359050611df581611dcf565b92915050565b600060208284031215611e1157611e10611d3d565b5b6000611e1f84828501611de6565b91505092915050565b60008060408385031215611e3f57611e3e611d3d565b5b6000611e4d85828601611d59565b9250506020611e5e85828601611de6565b9150509250929050565b611e7181611c77565b82525050565b6000602082019050611e8c6000830184611e68565b92915050565b60008115159050919050565b611ea781611e92565b82525050565b6000602082019050611ec26000830184611e9e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f0282611d9b565b9150611f0d83611d9b565b9250828203905081811115611f2557611f24611ec8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f6582611d9b565b9150611f7083611d9b565b925082611f8057611f7f611f2b565b5b828206905092915050565b6000611f9682611d9b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fc857611fc7611ec8565b5b600182019050919050565b600082825260208201905092915050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b600061201a601783611fd3565b915061202582611fe4565b602082019050919050565b600060208201905081810360008301526120498161200d565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b6000612086601b83611fd3565b915061209182612050565b602082019050919050565b600060208201905081810360008301526120b581612079565b9050919050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b60006120f2601483611fd3565b91506120fd826120bc565b602082019050919050565b60006020820190508181036000830152612121816120e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000815190506121c481611d42565b92915050565b6000602082840312156121e0576121df611d3d565b5b60006121ee848285016121b5565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612253602583611fd3565b915061225e826121f7565b604082019050919050565b6000602082019050818103600083015261228281612246565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b60006122bf601983611fd3565b91506122ca82612289565b602082019050919050565b600060208201905081810360008301526122ee816122b2565b9050919050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b600061232b601483611fd3565b9150612336826122f5565b602082019050919050565b6000602082019050818103600083015261235a8161231e565b9050919050565b600061236c82611d9b565b915061237783611d9b565b92508261238757612386611f2b565b5b828204905092915050565b600061239d82611d9b565b91506123a883611d9b565b92508282019050808211156123c0576123bf611ec8565b5b92915050565b60006123d182611d9b565b9150600082036123e4576123e3611ec8565b5b60018203905091905056fea264697066735822122049fa1820b4a09e4cee4e98c7e3bc6e322480e981bf70763f998d6fe0e732a3e064736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;
  private static final Logger LOG = LoggerFactory.getLogger(RepuContract.class);

  public RepuContract(
          String contractAddress,
          Web3j web3j,
          Credentials credentials,
          ContractGasProvider contractGasProvider,
          ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          String contractAddress,
          Web3j web3j,
          Credentials credentials,
          ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<List>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<List>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(String address, BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS), new Address(INITIAL_VALIDATOR))));
  }

  public void setProxyContract(ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(String address) throws Exception { return this.isValidatorCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(String address, BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
