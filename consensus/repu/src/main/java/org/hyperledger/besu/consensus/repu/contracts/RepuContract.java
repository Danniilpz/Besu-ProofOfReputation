/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.hyperledger.besu.consensus.repu.RepuHelpers;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a600c556001600d553480156200001b57600080fd5b5060405162003527380380620035278339818101604052810190620000419190620008dc565b6200005282620000fc60201b60201c565b62000062620001a660201b60201c565b600060088190555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b8190555050505062000aef565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b600180549050811015620002a2576200020960018281548110620001d257620001d162000938565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002cd60201b60201c565b6000806001848154811062000223576200022262000938565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620002999062000996565b915050620001a9565b50620002b36200036d60201b60201c565b60019080519060200190620002ca92919062000789565b50565b6000600d54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200031e919062000a12565b600c54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316200034e919062000a12565b6200035a919062000a12565b62000366919062000a4a565b9050919050565b6060600060018054905067ffffffffffffffff81111562000393576200039262000a85565b5b604051908082528060200260200182016040528015620003c25781602001602082028036833780820191505090505b509050600060018054806020026020016040519081016040528092919081815260200182805480156200044b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000400575b5050505050905060005b6001805490508110156200051b57600080600183815481106200047d576200047c62000938565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004f957620004f862000938565b5b6020026020010181815250508080620005129062000996565b91505062000455565b506200052e82826200053660201b60201c565b809250505090565b60008251905060008060005b8381101562000781576000600190505b818562000560919062000ab4565b8110156200076a578681815181106200057e576200057d62000938565b5b60200260200101518760018362000596919062000ab4565b81518110620005aa57620005a962000938565b5b60200260200101511015620007545786600182620005c9919062000ab4565b81518110620005dd57620005dc62000938565b5b6020026020010151935085600182620005f7919062000ab4565b815181106200060b576200060a62000938565b5b602002602001015192508681815181106200062b576200062a62000938565b5b60200260200101518760018362000643919062000ab4565b8151811062000657576200065662000938565b5b60200260200101818152505085818151811062000679576200067862000938565b5b60200260200101518660018362000691919062000ab4565b81518110620006a557620006a462000938565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110620006f657620006f562000938565b5b6020026020010181815250508286828151811062000719576200071862000938565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620007619062000996565b91505062000552565b508080620007789062000996565b91505062000542565b505050505050565b82805482825590600052602060002090810192821562000805579160200282015b82811115620008045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620007aa565b5b50905062000814919062000818565b5090565b5b808211156200083357600081600090555060010162000819565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000869826200083c565b9050919050565b6200087b816200085c565b81146200088757600080fd5b50565b6000815190506200089b8162000870565b92915050565b6000819050919050565b620008b681620008a1565b8114620008c257600080fd5b50565b600081519050620008d681620008ab565b92915050565b600080600060608486031215620008f857620008f762000837565b5b600062000908868287016200088a565b93505060206200091b868287016200088a565b92505060406200092e86828701620008c5565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009a382620008a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620009d857620009d762000967565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000a1f82620008a1565b915062000a2c83620008a1565b92508262000a3f5762000a3e620009e3565b5b828204905092915050565b600062000a5782620008a1565b915062000a6483620008a1565b925082820190508082111562000a7f5762000a7e62000967565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062000ac182620008a1565b915062000ace83620008a1565b925082820390508181111562000ae95762000ae862000967565b5b92915050565b612a288062000aff6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80639ab24eb0116100a2578063b7ab4db511610071578063b7ab4db51461027e578063b9137cca1461029c578063bdf3e088146102ba578063cdd72253146102d6578063facd743b146102f45761010b565b80639ab24eb0146101e65780639c89a0e2146102165780639cbfc76514610246578063b28fc600146102625761010b565b80633ea4fa47116100de5780633ea4fa47146101745780637b778b70146101905780637ed21005146101ac578063933a9ce8146101c85761010b565b806306a49fce146101105780631ba5eec01461012e5780632e97766d14610138578063360b97b914610156575b600080fd5b610118610324565b60405161012591906122db565b60405180910390f35b6101366103b2565b005b61014061047f565b60405161014d9190612316565b60405180910390f35b61015e610487565b60405161016b91906122db565b60405180910390f35b61018e60048036038101906101899190612362565b610515565b005b6101aa60048036038101906101a591906123bb565b610579565b005b6101c660048036038101906101c191906123bb565b6109f0565b005b6101d0610a23565b6040516101dd919061240a565b60405180910390f35b61020060048036038101906101fb9190612425565b610a4d565b60405161020d9190612316565b60405180910390f35b610230600480360381019061022b9190612425565b610a96565b60405161023d9190612316565b60405180910390f35b610260600480360381019061025b9190612425565b610ade565b005b61027c60048036038101906102779190612362565b610b4c565b005b610286610bb0565b60405161029391906122db565b60405180910390f35b6102a4610c3e565b6040516102b191906122db565b60405180910390f35b6102d460048036038101906102cf9190612425565b610e3a565b005b6102de61101a565b6040516102eb91906122db565b60405180910390f35b61030e60048036038101906103099190612425565b6110a8565b60405161031b919061246d565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161035e575b5050505050905090565b6103bb336110a8565b806104135750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61041c57600080fd5b6008600081548092919061042f906124b7565b91905055506000600b54600161044361047f565b61044d91906124ff565b6104579190612562565b0361047d57610464611149565b60086000815480929190610477906124b7565b91905055505b565b600043905090565b6060600780548060200260200160405190810160405280929190818152602001828054801561050b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104c1575b5050505050905090565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056f57600080fd5b80600c8190555050565b6000600b54436105899190612562565b146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c0906125f0565b60405180910390fd5b60048054905061065f33600480548060200260200160405190810160405280929190818152602001828054801561065557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161060b575b505050505061126d565b1461069f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106969061265c565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361070e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610705906126c8565b60405180910390fd5b826007805490506107a582600780548060200260200160405190810160405280929190818152602001828054801561079b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610751575b505050505061126d565b146107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90612734565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061083957610834846112f3565b6109ea565b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361098b576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b61099433611371565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e29190612754565b925050819055505b50505050565b6109f86103b2565b6000600b54610a0561047f565b610a0f9190612562565b03610a1f57610a1e8282610579565b5b5050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3857600080fd5b610b4181611409565b610b4961161b565b50565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba657600080fd5b80600d8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c3457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bea575b5050505050905090565b60606000600180549050600854610c559190612562565b905060008060018054905067ffffffffffffffff811115610c7957610c78612788565b5b604051908082528060200260200182016040528015610ca75781602001602082028036833780820191505090505b5090505b600180549050831015610d655760018381548110610ccc57610ccb6127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610d0a57610d096127b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610d4f906124b7565b9350508180610d5d906124b7565b925050610cab565b600092505b600180549050600854610d7d9190612562565b831015610e315760018381548110610d9857610d976127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610dd657610dd56127b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e1b906124b7565b9350508180610e29906124b7565b925050610d6a565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eac91906127fb565b90508073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f359061289a565b60405180910390fd5b82610f4881611726565b610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e90612906565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610fe2919061240a565b600060405180830381600087803b158015610ffc57600080fd5b505af1158015611010573d6000803e3d6000fd5b5050505050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561109e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611054575b5050505050905090565b600060018054905061114083600180548060200260200160405190810160405280929190818152602001828054801561113657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110ec575b505050505061126d565b14159050919050565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611194611749565b9050600360006111a49190612123565b60005b60048054905081101561124a57600060026000600484815481106111ce576111cd6127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080611242906124b7565b9150506111a7565b50600460006112599190612123565b6112628161194e565b61126a61161b565b50565b600080600090505b82518110156112e7578373ffffffffffffffffffffffffffffffffffffffff168382815181106112a8576112a76127b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036112d457809150506112ed565b80806112df906124b7565b915050611275565b50815190505b92915050565b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061135f816110a8565b1561136e5761136d81611409565b5b50565b6000600d54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113c09190612926565b600c54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316113ee9190612926565b6113f89190612926565b6114029190612754565b9050919050565b600061149b82600180548060200260200160405190810160405280929190818152602001828054801561149157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611447575b505050505061126d565b905060018054905081106114e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114db906129a3565b60405180910390fd5b60018080805490506114f691906124ff565b81548110611507576115066127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110611546576115456127b7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054806115a05761159f6129c3565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b6001805490508110156117055761167260018281548110611642576116416127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611371565b60008060018481548110611689576116886127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806116fd906124b7565b91505061161e565b5061170e611ca8565b60019080519060200190611723929190612144565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff81111561176c5761176b612788565b5b60405190808252806020026020018201604052801561179a5781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff8111156117be576117bd612788565b5b6040519080825280602002602001820160405280156117ec5781602001602082028036833780820191505090505b50905060005b60038054905081101561193b576002600060038381548110611817576118166127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548382815181106118905761188f6127b7565b5b602002602001018181525050600381815481106118b0576118af6127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106118ee576118ed6127b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611933906124b7565b9150506117f2565b506119468282611e59565b809250505090565b6000805b8251811080156119625750600282105b15611b92576000600660008584815181106119805761197f6127b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015611a7d5750600780549050611a7b8483815181106119e7576119e66127b7565b5b60200260200101516007805480602002602001604051908101604052809291908181526020018280548015611a7157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a27575b505050505061126d565b145b8015611aba57506000838281518110611a9957611a986127b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631115b15611b7f57611ae2838281518110611ad557611ad46127b7565b5b60200260200101516110a8565b15611b0f57611b0a838281518110611afd57611afc6127b7565b5b6020026020010151611409565b611b70565b600281600180549050611b229190612754565b03611b6f576001805480611b3957611b386129c3565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611b7b906124b7565b9250505b8080611b8a906124b7565b915050611952565b5060005b825181108015611ba65750600281105b15611ca357600060066000858481518110611bc457611bc36127b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611c9057611c30838281518110611c2357611c226127b7565b5b6020026020010151612079565b600060026000858481518110611c4957611c486127b7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611c9b906124b7565b915050611b96565b505050565b6060600060018054905067ffffffffffffffff811115611ccb57611cca612788565b5b604051908082528060200260200182016040528015611cf95781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611d8057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d36575b5050505050905060005b600180549050811015611e465760008060018381548110611dae57611dad6127b7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611e2757611e266127b7565b5b6020026020010181815250508080611e3e906124b7565b915050611d8a565b50611e518282611e59565b809250505090565b60008251905060008060005b83811015612071576000600190505b8185611e8091906124ff565b81101561205d57868181518110611e9a57611e996127b7565b5b602002602001015187600183611eb091906124ff565b81518110611ec157611ec06127b7565b5b6020026020010151101561204a5786600182611edd91906124ff565b81518110611eee57611eed6127b7565b5b6020026020010151935085600182611f0691906124ff565b81518110611f1757611f166127b7565b5b60200260200101519250868181518110611f3457611f336127b7565b5b602002602001015187600183611f4a91906124ff565b81518110611f5b57611f5a6127b7565b5b602002602001018181525050858181518110611f7a57611f796127b7565b5b602002602001015186600183611f9091906124ff565b81518110611fa157611fa06127b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110611fef57611fee6127b7565b5b6020026020010181815250508286828151811061200f5761200e6127b7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080612055906124b7565b915050611e74565b508080612069906124b7565b915050611e65565b505050505050565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b508054600082559060005260206000209081019061214191906121ce565b50565b8280548282559060005260206000209081019282156121bd579160200282015b828111156121bc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612164565b5b5090506121ca91906121ce565b5090565b5b808211156121e75760008160009055506001016121cf565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061224282612217565b9050919050565b61225281612237565b82525050565b60006122648383612249565b60208301905092915050565b6000602082019050919050565b6000612288826121eb565b61229281856121f6565b935061229d83612207565b8060005b838110156122ce5781516122b58882612258565b97506122c083612270565b9250506001810190506122a1565b5085935050505092915050565b600060208201905081810360008301526122f5818461227d565b905092915050565b6000819050919050565b612310816122fd565b82525050565b600060208201905061232b6000830184612307565b92915050565b600080fd5b61233f816122fd565b811461234a57600080fd5b50565b60008135905061235c81612336565b92915050565b60006020828403121561237857612377612331565b5b60006123868482850161234d565b91505092915050565b61239881612237565b81146123a357600080fd5b50565b6000813590506123b58161238f565b92915050565b600080604083850312156123d2576123d1612331565b5b60006123e0858286016123a6565b92505060206123f18582860161234d565b9150509250929050565b61240481612237565b82525050565b600060208201905061241f60008301846123fb565b92915050565b60006020828403121561243b5761243a612331565b5b6000612449848285016123a6565b91505092915050565b60008115159050919050565b61246781612452565b82525050565b6000602082019050612482600083018461245e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124c2826122fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124f4576124f3612488565b5b600182019050919050565b600061250a826122fd565b9150612515836122fd565b925082820390508181111561252d5761252c612488565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061256d826122fd565b9150612578836122fd565b92508261258857612587612533565b5b828206905092915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b60006125da601483612593565b91506125e5826125a4565b602082019050919050565b60006020820190508181036000830152612609816125cd565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b6000612646601783612593565b915061265182612610565b602082019050919050565b6000602082019050818103600083015261267581612639565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b60006126b2601b83612593565b91506126bd8261267c565b602082019050919050565b600060208201905081810360008301526126e1816126a5565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b600061271e601983612593565b9150612729826126e8565b602082019050919050565b6000602082019050818103600083015261274d81612711565b9050919050565b600061275f826122fd565b915061276a836122fd565b925082820190508082111561278257612781612488565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506127f58161238f565b92915050565b60006020828403121561281157612810612331565b5b600061281f848285016127e6565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612884602583612593565b915061288f82612828565b604082019050919050565b600060208201905081810360008301526128b381612877565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b60006128f0601983612593565b91506128fb826128ba565b602082019050919050565b6000602082019050818103600083015261291f816128e3565b9050919050565b6000612931826122fd565b915061293c836122fd565b92508261294c5761294b612533565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b600061298d601483612593565b915061299882612957565b602082019050919050565b600060208201905081810360008301526129bc81612980565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206ff790a9f74aac38fe4df626749693398bc10b34c5ac3761bc39ee5d5c6407fc64736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static final String FUNC_GETREPUTATION = "getReputation";
  public static final String FUNC_GETVOTES = "getVotes";
  public static final String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static final String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider,
          final ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<BigInteger> getReputationCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETREPUTATION,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<BigInteger> getVotesCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVOTES,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          final Web3j web3j, final Credentials credentials, final ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS),
                    new Address(INITIAL_VALIDATOR), new Uint256(RepuHelpers.VOTATION_TIME))));
  }

  public void setProxyContract(final ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(final String address) throws Exception { return this.isValidatorCall(address).send(); }

  public BigInteger getReputation(final String address) throws Exception { return this.getReputationCall(address).send(); }

  public BigInteger getVotes(final String address) throws Exception { return this.getVotesCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(final String address, final BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(final String address, final BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
