/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a600b556001600c553480156200001b57600080fd5b506040516200349038038062003490833981810160405281019062000041919062000634565b6200005281620000f460201b60201c565b620000626200019e60201b60201c565b600060088190555081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000801565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b6001805490508110156200029a576200020160018281548110620001ca57620001c96200067b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002c560201b60201c565b600080600184815481106200021b576200021a6200067b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806200029190620006e3565b915050620001a1565b50620002ab6200036560201b60201c565b60019080519060200190620002c29291906200051c565b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200031691906200075f565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316200034691906200075f565b6200035291906200075f565b6200035e919062000797565b9050919050565b6060600060018054905067ffffffffffffffff8111156200038b576200038a620007d2565b5b604051908082528060200260200182016040528015620003ba5781602001602082028036833780820191505090505b509050600060018054806020026020016040519081016040528092919081815260200182805480156200044357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620003f8575b5050505050905060005b6001805490508110156200051357600080600183815481106200047557620004746200067b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004f157620004f06200067b565b5b60200260200101818152505080806200050a90620006e3565b9150506200044d565b50809250505090565b82805482825590600052602060002090810192821562000598579160200282015b82811115620005975782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200053d565b5b509050620005a79190620005ab565b5090565b5b80821115620005c6576000816000905550600101620005ac565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005fc82620005cf565b9050919050565b6200060e81620005ef565b81146200061a57600080fd5b50565b6000815190506200062e8162000603565b92915050565b600080604083850312156200064e576200064d620005ca565b5b60006200065e858286016200061d565b925050602062000671858286016200061d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000620006f082620006d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007255762000724620006aa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200076c82620006d9565b91506200077983620006d9565b9250826200078c576200078b62000730565b5b828204905092915050565b6000620007a482620006d9565b9150620007b183620006d9565b9250828201905080821115620007cc57620007cb620006aa565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612c7f80620008116000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063933a9ce8116100ad578063b9137cca11610071578063b9137cca146102e2578063bdf3e08814610300578063cdd722531461031c578063ea83c01c1461033a578063facd743b1461035657610121565b8063933a9ce81461023e5780639cbfc7651461025c578063b28fc60014610278578063b7ab4db514610294578063b872953e146102b257610121565b8063360b97b9116100f4578063360b97b91461019c5780633ea4fa47146101ba5780637b778b70146101d65780637ed21005146101f2578063899c71841461020e57610121565b806306a49fce146101265780631ba5eec0146101445780632945400c1461014e5780632e97766d1461017e575b600080fd5b61012e610386565b60405161013b91906122be565b60405180910390f35b61014c610414565b005b61016860048036038101906101639190612320565b6104e0565b6040516101759190612366565b60405180910390f35b6101866104f8565b6040516101939190612366565b60405180910390f35b6101a4610500565b6040516101b191906122be565b60405180910390f35b6101d460048036038101906101cf91906123ad565b61058e565b005b6101f060048036038101906101eb91906123da565b6105f2565b005b61020c600480360381019061020791906123da565b610a68565b005b61022860048036038101906102239190612320565b610a9a565b6040516102359190612366565b60405180910390f35b610246610ab2565b6040516102539190612429565b60405180910390f35b61027660048036038101906102719190612320565b610adc565b005b610292600480360381019061028d91906123ad565b610b4a565b005b61029c610bae565b6040516102a991906122be565b60405180910390f35b6102cc60048036038101906102c79190612320565b610c3c565b6040516102d99190612366565b60405180910390f35b6102ea610c54565b6040516102f791906122be565b60405180910390f35b61031a60048036038101906103159190612320565b610e50565b005b610324611030565b60405161033191906122be565b60405180910390f35b610354600480360381019061034f9190612660565b6110be565b005b610370600480360381019061036b9190612320565b6112f2565b60405161037d91906126f3565b60405180910390f35b6060600380548060200260200160405190810160405280929190818152602001828054801561040a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103c0575b5050505050905090565b61041d336112f2565b806104755750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61047e57600080fd5b600860008154809291906104919061273d565b91905055506000600560016104a46104f8565b6104ae9190612785565b6104b891906127e8565b036104de576104c5611393565b600860008154809291906104d89061273d565b91905055505b565b60066020528060005260406000206000915090505481565b600043905090565b6060600780548060200260200160405190810160405280929190818152602001828054801561058457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161053a575b5050505050905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e857600080fd5b80600b8190555050565b600060054361060191906127e8565b14610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063890612876565b60405180910390fd5b6004805490506106d73360048054806020026020016040519081016040528092919081815260200182805480156106cd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610683575b50505050506114b7565b14610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e906128e2565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d9061294e565b60405180910390fd5b8260078054905061081d82600780548060200260200160405190810160405280929190818152602001828054801561081357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107c9575b50505050506114b7565b1461085d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610854906129ba565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106108b1576108ac8461153d565b610a62565b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610a03576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610a0c336115bb565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a5a91906129da565b925050819055505b50505050565b610a70610414565b60006005610a7c6104f8565b610a8691906127e8565b03610a9657610a9582826105f2565b5b5050565b60006020528060005260406000206000915090505481565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3657600080fd5b610b3f81611653565b610b47611865565b50565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba457600080fd5b80600c8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c3257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610be8575b5050505050905090565b60026020528060005260406000206000915090505481565b60606000600180549050600854610c6b91906127e8565b905060008060018054905067ffffffffffffffff811115610c8f57610c8e61245a565b5b604051908082528060200260200182016040528015610cbd5781602001602082028036833780820191505090505b5090505b600180549050831015610d7b5760018381548110610ce257610ce1612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610d2057610d1f612a0e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610d659061273d565b9350508180610d739061273d565b925050610cc1565b600092505b600180549050600854610d9391906127e8565b831015610e475760018381548110610dae57610dad612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610dec57610deb612a0e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e319061273d565b9350508180610e3f9061273d565b925050610d80565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec29190612a52565b90508073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b90612af1565b60405180910390fd5b82610f5e81611970565b610f9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9490612b5d565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610ff89190612429565b600060405180830381600087803b15801561101257600080fd5b505af1158015611026573d6000803e3d6000fd5b5050505050505050565b606060048054806020026020016040519081016040528092919081815260200182805480156110b457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161106a575b5050505050905090565b60008251905060008060005b6001846110d79190612785565b8110156112ea5760005b600182866110ef9190612785565b6110f99190612785565b8110156112d6578660018261110e91906129da565b8151811061111f5761111e612a0e565b5b602002602001015187828151811061113a57611139612a0e565b5b602002602001015111156112c35786818151811061115b5761115a612a0e565b5b6020026020010151935085818151811061117857611177612a0e565b5b602002602001015192508660018261119091906129da565b815181106111a1576111a0612a0e565b5b60200260200101518782815181106111bc576111bb612a0e565b5b602002602001018181525050856001826111d691906129da565b815181106111e7576111e6612a0e565b5b602002602001015186828151811061120257611201612a0e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838760018361124b91906129da565b8151811061125c5761125b612a0e565b5b602002602001018181525050828660018361127791906129da565b8151811061128857611287612a0e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806112ce9061273d565b9150506110e1565b5080806112e29061273d565b9150506110ca565b505050505050565b600060018054905061138a83600180548060200260200160405190810160405280929190818152602001828054801561138057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611336575b50505050506114b7565b14159050919050565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006113de611993565b9050600360006113ee9190612106565b60005b600480549050811015611494576000600260006004848154811061141857611417612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061148c9061273d565b9150506113f1565b50600460006114a39190612106565b6114ac81611b98565b6114b4611865565b50565b600080600090505b8251811015611531578373ffffffffffffffffffffffffffffffffffffffff168382815181106114f2576114f1612a0e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361151e5780915050611537565b80806115299061273d565b9150506114bf565b50815190505b92915050565b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115a9816112f2565b156115b8576115b781611653565b5b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160a9190612b7d565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316116389190612b7d565b6116429190612b7d565b61164c91906129da565b9050919050565b60006116e58260018054806020026020016040519081016040528092919081815260200182805480156116db57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611691575b50505050506114b7565b9050600180549050811061172e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172590612bfa565b60405180910390fd5b60018080805490506117409190612785565b8154811061175157611750612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106117905761178f612a0e565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054806117ea576117e9612c1a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b60018054905081101561194f576118bc6001828154811061188c5761188b612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166115bb565b600080600184815481106118d3576118d2612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806119479061273d565b915050611868565b50611958611eb5565b6001908051906020019061196d929190612127565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff8111156119b6576119b561245a565b5b6040519080825280602002602001820160405280156119e45781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff811115611a0857611a0761245a565b5b604051908082528060200260200182016040528015611a365781602001602082028036833780820191505090505b50905060005b600380549050811015611b85576002600060038381548110611a6157611a60612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611ada57611ad9612a0e565b5b60200260200101818152505060038181548110611afa57611af9612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611b3857611b37612a0e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611b7d9061273d565b915050611a3c565b50611b9082826110be565b809250505090565b6000805b825181108015611bac5750600282105b15611d9f57600060066000858481518110611bca57611bc9612a0e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015611cc75750600780549050611cc5848381518110611c3157611c30612a0e565b5b60200260200101516007805480602002602001604051908101604052809291908181526020018280548015611cbb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c71575b50505050506114b7565b145b15611d8c57611cef838281518110611ce257611ce1612a0e565b5b60200260200101516112f2565b15611d1c57611d17838281518110611d0a57611d09612a0e565b5b6020026020010151611653565b611d7d565b600281600180549050611d2f91906129da565b03611d7c576001805480611d4657611d45612c1a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611d889061273d565b9250505b8080611d979061273d565b915050611b9c565b5060005b825181108015611db35750600281105b15611eb057600060066000858481518110611dd157611dd0612a0e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611e9d57611e3d838281518110611e3057611e2f612a0e565b5b602002602001015161205c565b600060026000858481518110611e5657611e55612a0e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611ea89061273d565b915050611da3565b505050565b6060600060018054905067ffffffffffffffff811115611ed857611ed761245a565b5b604051908082528060200260200182016040528015611f065781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611f8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f43575b5050505050905060005b6001805490508110156120535760008060018381548110611fbb57611fba612a0e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061203457612033612a0e565b5b602002602001018181525050808061204b9061273d565b915050611f97565b50809250505090565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b508054600082559060005260206000209081019061212491906121b1565b50565b8280548282559060005260206000209081019282156121a0579160200282015b8281111561219f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612147565b5b5090506121ad91906121b1565b5090565b5b808211156121ca5760008160009055506001016121b2565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612225826121fa565b9050919050565b6122358161221a565b82525050565b6000612247838361222c565b60208301905092915050565b6000602082019050919050565b600061226b826121ce565b61227581856121d9565b9350612280836121ea565b8060005b838110156122b1578151612298888261223b565b97506122a383612253565b925050600181019050612284565b5085935050505092915050565b600060208201905081810360008301526122d88184612260565b905092915050565b6000604051905090565b600080fd5b600080fd5b6122fd8161221a565b811461230857600080fd5b50565b60008135905061231a816122f4565b92915050565b600060208284031215612336576123356122ea565b5b60006123448482850161230b565b91505092915050565b6000819050919050565b6123608161234d565b82525050565b600060208201905061237b6000830184612357565b92915050565b61238a8161234d565b811461239557600080fd5b50565b6000813590506123a781612381565b92915050565b6000602082840312156123c3576123c26122ea565b5b60006123d184828501612398565b91505092915050565b600080604083850312156123f1576123f06122ea565b5b60006123ff8582860161230b565b925050602061241085828601612398565b9150509250929050565b6124238161221a565b82525050565b600060208201905061243e600083018461241a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61249282612449565b810181811067ffffffffffffffff821117156124b1576124b061245a565b5b80604052505050565b60006124c46122e0565b90506124d08282612489565b919050565b600067ffffffffffffffff8211156124f0576124ef61245a565b5b602082029050602081019050919050565b600080fd5b6000612519612514846124d5565b6124ba565b9050808382526020820190506020840283018581111561253c5761253b612501565b5b835b8181101561256557806125518882612398565b84526020840193505060208101905061253e565b5050509392505050565b600082601f83011261258457612583612444565b5b8135612594848260208601612506565b91505092915050565b600067ffffffffffffffff8211156125b8576125b761245a565b5b602082029050602081019050919050565b60006125dc6125d78461259d565b6124ba565b905080838252602082019050602084028301858111156125ff576125fe612501565b5b835b818110156126285780612614888261230b565b845260208401935050602081019050612601565b5050509392505050565b600082601f83011261264757612646612444565b5b81356126578482602086016125c9565b91505092915050565b60008060408385031215612677576126766122ea565b5b600083013567ffffffffffffffff811115612695576126946122ef565b5b6126a18582860161256f565b925050602083013567ffffffffffffffff8111156126c2576126c16122ef565b5b6126ce85828601612632565b9150509250929050565b60008115159050919050565b6126ed816126d8565b82525050565b600060208201905061270860008301846126e4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127488261234d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361277a5761277961270e565b5b600182019050919050565b60006127908261234d565b915061279b8361234d565b92508282039050818111156127b3576127b261270e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127f38261234d565b91506127fe8361234d565b92508261280e5761280d6127b9565b5b828206905092915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b6000612860601483612819565b915061286b8261282a565b602082019050919050565b6000602082019050818103600083015261288f81612853565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b60006128cc601783612819565b91506128d782612896565b602082019050919050565b600060208201905081810360008301526128fb816128bf565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b6000612938601b83612819565b915061294382612902565b602082019050919050565b600060208201905081810360008301526129678161292b565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b60006129a4601983612819565b91506129af8261296e565b602082019050919050565b600060208201905081810360008301526129d381612997565b9050919050565b60006129e58261234d565b91506129f08361234d565b9250828201905080821115612a0857612a0761270e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050612a4c816122f4565b92915050565b600060208284031215612a6857612a676122ea565b5b6000612a7684828501612a3d565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612adb602583612819565b9150612ae682612a7f565b604082019050919050565b60006020820190508181036000830152612b0a81612ace565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b6000612b47601983612819565b9150612b5282612b11565b602082019050919050565b60006020820190508181036000830152612b7681612b3a565b9050919050565b6000612b888261234d565b9150612b938361234d565b925082612ba357612ba26127b9565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b6000612be4601483612819565b9150612bef82612bae565b602082019050919050565b60006020820190508181036000830152612c1381612bd7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e2136d7a4e540faf0bb88e18655a55d0891889110c426d7419e0b04945ea4bfa64736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider,
          final ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          final Web3j web3j, final Credentials credentials, final ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS), new Address(INITIAL_VALIDATOR))));
  }

  public void setProxyContract(final ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(final String address) throws Exception { return this.isValidatorCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(final String address, final BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(final String address, final BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
