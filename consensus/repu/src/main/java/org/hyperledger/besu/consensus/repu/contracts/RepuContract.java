/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.hyperledger.besu.consensus.repu.RepuHelpers;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a600d556001600e556001600f553480156200002057600080fd5b50604051620037a1380380620037a183398181016040528101906200004691906200093c565b62000057826200010160201b60201c565b62000067620001ab60201b60201c565b600060098190555082600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c8190555050505062000b4f565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b600180549050811015620002a7576200020e60018281548110620001d757620001d662000998565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002d260201b60201c565b6000806001848154811062000228576200022762000998565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806200029e90620009f6565b915050620001ae565b50620002b8620003cd60201b60201c565b60019080519060200190620002cf929190620007e9565b50565b6000600f54600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000323919062000a72565b600e54600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000372919062000a72565b600d54670de0b6b3a76400008573ffffffffffffffffffffffffffffffffffffffff1631620003a2919062000a72565b620003ae919062000a72565b620003ba919062000aaa565b620003c6919062000aaa565b9050919050565b6060600060018054905067ffffffffffffffff811115620003f357620003f262000ae5565b5b604051908082528060200260200182016040528015620004225781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015620004ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000460575b5050505050905060005b6001805490508110156200057b5760008060018381548110620004dd57620004dc62000998565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811062000559576200055862000998565b5b60200260200101818152505080806200057290620009f6565b915050620004b5565b506200058e82826200059660201b60201c565b809250505090565b60008251905060008060005b83811015620007e1576000600190505b8185620005c0919062000b14565b811015620007ca57868181518110620005de57620005dd62000998565b5b602002602001015187600183620005f6919062000b14565b815181106200060a576200060962000998565b5b60200260200101511015620007b4578660018262000629919062000b14565b815181106200063d576200063c62000998565b5b602002602001015193508560018262000657919062000b14565b815181106200066b576200066a62000998565b5b602002602001015192508681815181106200068b576200068a62000998565b5b602002602001015187600183620006a3919062000b14565b81518110620006b757620006b662000998565b5b602002602001018181525050858181518110620006d957620006d862000998565b5b602002602001015186600183620006f1919062000b14565b8151811062000705576200070462000998565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508387828151811062000756576200075562000998565b5b6020026020010181815250508286828151811062000779576200077862000998565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620007c190620009f6565b915050620005b2565b508080620007d890620009f6565b915050620005a2565b505050505050565b82805482825590600052602060002090810192821562000865579160200282015b82811115620008645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200080a565b5b50905062000874919062000878565b5090565b5b808211156200089357600081600090555060010162000879565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008c9826200089c565b9050919050565b620008db81620008bc565b8114620008e757600080fd5b50565b600081519050620008fb81620008d0565b92915050565b6000819050919050565b620009168162000901565b81146200092257600080fd5b50565b60008151905062000936816200090b565b92915050565b60008060006060848603121562000958576200095762000897565b5b60006200096886828701620008ea565b93505060206200097b86828701620008ea565b92505060406200098e8682870162000925565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a038262000901565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000a385762000a37620009c7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600062000a7f8262000901565b915062000a8c8362000901565b92508262000a9f5762000a9e62000a43565b5b828204905092915050565b600062000ab78262000901565b915062000ac48362000901565b925082820190508082111562000adf5762000ade620009c7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062000b218262000901565b915062000b2e8362000901565b925082820390508181111562000b495762000b48620009c7565b5b92915050565b612c428062000b5f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063933a9ce8116100b8578063b7ab4db51161007c578063b7ab4db514610304578063b9137cca14610322578063bdf3e08814610340578063cb8e27071461035c578063cdd7225314610378578063facd743b1461039657610137565b8063933a9ce81461024c5780639599ec3a1461026a5780639ab24eb0146102885780639c89a0e2146102b85780639cbfc765146102e857610137565b806369fda5df116100ff57806369fda5df146101bc5780637b778b70146101d85780637ed21005146101f45780638302c2fd14610210578063869212d31461022e57610137565b806306a49fce1461013c5780631ba5eec01461015a5780631bf2a89d146101645780632e97766d14610180578063360b97b91461019e575b600080fd5b6101446103c6565b60405161015191906124f5565b60405180910390f35b610162610454565b005b61017e60048036038101906101799190612552565b6105cc565b005b610188610630565b604051610195919061258e565b60405180910390f35b6101a6610638565b6040516101b391906124f5565b60405180910390f35b6101d660048036038101906101d19190612552565b6106c6565b005b6101f260048036038101906101ed91906125d5565b61072a565b005b61020e600480360381019061020991906125d5565b610ba1565b005b610218610bd4565b604051610225919061258e565b60405180910390f35b610236610bda565b604051610243919061258e565b60405180910390f35b610254610be0565b6040516102619190612624565b60405180910390f35b610272610c0a565b60405161027f919061258e565b60405180910390f35b6102a2600480360381019061029d919061263f565b610c10565b6040516102af919061258e565b60405180910390f35b6102d260048036038101906102cd919061263f565b610c59565b6040516102df919061258e565b60405180910390f35b61030260048036038101906102fd919061263f565b610ca1565b005b61030c610d0f565b60405161031991906124f5565b60405180910390f35b61032a610d9d565b60405161033791906124f5565b60405180910390f35b61035a6004803603810190610355919061263f565b610f99565b005b61037660048036038101906103719190612552565b611179565b005b6103806111dd565b60405161038d91906124f5565b60405180910390f35b6103b060048036038101906103ab919061263f565b61126b565b6040516103bd9190612687565b60405180910390f35b6060600380548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610400575b5050505050905090565b61045d3361126b565b806104b55750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6104be57600080fd5b60006001805490506009546104d391906126d1565b905060076000600183815481106104ed576104ec612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061056390612760565b91905055506009600081548092919061057b90612760565b91905055506000600c54600161058f610630565b61059991906127a8565b6105a391906126d1565b036105c9576105b061130c565b600960008154809291906105c390612760565b91905055505b50565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062657600080fd5b80600d8190555050565b600043905090565b606060088054806020026020016040519081016040528092919081815260200182805480156106bc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610672575b5050505050905090565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072057600080fd5b80600f8190555050565b6000600c544361073a91906126d1565b1461077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190612839565b60405180910390fd5b60048054905061081033600480548060200260200160405190810160405280929190818152602001828054801561080657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107bc575b5050505050611430565b14610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610847906128a5565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b690612911565b60405180910390fd5b8260088054905061095682600880548060200260200160405190810160405280929190818152602001828054801561094c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610902575b5050505050611430565b14610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d9061297d565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106109ea576109e5846114b6565b610b9b565b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610b3c576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610b4533611534565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b93919061299d565b925050819055505b50505050565b610ba9610454565b6000600c54610bb6610630565b610bc091906126d1565b03610bd057610bcf828261072a565b5b5050565b600e5481565b600d5481565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cfb57600080fd5b610d0481611623565b610d0c611835565b50565b60606001805480602002602001604051908101604052809291908181526020018280548015610d9357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d49575b5050505050905090565b60606000600180549050600954610db491906126d1565b905060008060018054905067ffffffffffffffff811115610dd857610dd76129d1565b5b604051908082528060200260200182016040528015610e065781602001602082028036833780820191505090505b5090505b600180549050831015610ec45760018381548110610e2b57610e2a612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610e6957610e68612702565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610eae90612760565b9350508180610ebc90612760565b925050610e0a565b600092505b600180549050600954610edc91906126d1565b831015610f905760018381548110610ef757610ef6612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610f3557610f34612702565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610f7a90612760565b9350508180610f8890612760565b925050610ec9565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b9190612a15565b90508073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461109d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109490612ab4565b60405180910390fd5b826110a781611940565b6110e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dd90612b20565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b81526004016111419190612624565b600060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b5050505050505050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111d357600080fd5b80600e8190555050565b6060600480548060200260200160405190810160405280929190818152602001828054801561126157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611217575b5050505050905090565b60006001805490506113038360018054806020026020016040519081016040528092919081815260200182805480156112f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112af575b5050505050611430565b14159050919050565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611357611963565b905060036000611367919061233d565b60005b60048054905081101561140d576000600260006004848154811061139157611390612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061140590612760565b91505061136a565b506004600061141c919061233d565b61142581611b68565b61142d611835565b50565b600080600090505b82518110156114aa578373ffffffffffffffffffffffffffffffffffffffff1683828151811061146b5761146a612702565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361149757809150506114b0565b80806114a290612760565b915050611438565b50815190505b92915050565b6008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115228161126b565b156115315761153081611623565b5b50565b6000600f54600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115839190612b40565b600e54600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d09190612b40565b600d54670de0b6b3a76400008573ffffffffffffffffffffffffffffffffffffffff16316115fe9190612b40565b6116089190612b40565b611612919061299d565b61161c919061299d565b9050919050565b60006116b58260018054806020026020016040519081016040528092919081815260200182805480156116ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611661575b5050505050611430565b905060018054905081106116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f590612bbd565b60405180910390fd5b600180808054905061171091906127a8565b8154811061172157611720612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106117605761175f612702565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018054806117ba576117b9612bdd565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b60018054905081101561191f5761188c6001828154811061185c5761185b612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611534565b600080600184815481106118a3576118a2612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061191790612760565b915050611838565b50611928611ec2565b6001908051906020019061193d92919061235e565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff811115611986576119856129d1565b5b6040519080825280602002602001820160405280156119b45781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff8111156119d8576119d76129d1565b5b604051908082528060200260200182016040528015611a065781602001602082028036833780820191505090505b50905060005b600380549050811015611b55576002600060038381548110611a3157611a30612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611aaa57611aa9612702565b5b60200260200101818152505060038181548110611aca57611ac9612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110611b0857611b07612702565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611b4d90612760565b915050611a0c565b50611b608282612073565b809250505090565b6000805b825181108015611b7c5750600282105b15611dac57600060066000858481518110611b9a57611b99612702565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015611c975750600880549050611c95848381518110611c0157611c00612702565b5b60200260200101516008805480602002602001604051908101604052809291908181526020018280548015611c8b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c41575b5050505050611430565b145b8015611cd457506000838281518110611cb357611cb2612702565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631115b15611d9957611cfc838281518110611cef57611cee612702565b5b602002602001015161126b565b15611d2957611d24838281518110611d1757611d16612702565b5b6020026020010151611623565b611d8a565b600281600180549050611d3c919061299d565b03611d89576001805480611d5357611d52612bdd565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611d9590612760565b9250505b8080611da490612760565b915050611b6c565b5060005b825181108015611dc05750600281105b15611ebd57600060066000858481518110611dde57611ddd612702565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611eaa57611e4a838281518110611e3d57611e3c612702565b5b6020026020010151612293565b600060026000858481518110611e6357611e62612702565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611eb590612760565b915050611db0565b505050565b6060600060018054905067ffffffffffffffff811115611ee557611ee46129d1565b5b604051908082528060200260200182016040528015611f135781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611f9a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f50575b5050505050905060005b6001805490508110156120605760008060018381548110611fc857611fc7612702565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061204157612040612702565b5b602002602001018181525050808061205890612760565b915050611fa4565b5061206b8282612073565b809250505090565b60008251905060008060005b8381101561228b576000600190505b818561209a91906127a8565b811015612277578681815181106120b4576120b3612702565b5b6020026020010151876001836120ca91906127a8565b815181106120db576120da612702565b5b6020026020010151101561226457866001826120f791906127a8565b8151811061210857612107612702565b5b602002602001015193508560018261212091906127a8565b8151811061213157612130612702565b5b6020026020010151925086818151811061214e5761214d612702565b5b60200260200101518760018361216491906127a8565b8151811061217557612174612702565b5b60200260200101818152505085818151811061219457612193612702565b5b6020026020010151866001836121aa91906127a8565b815181106121bb576121ba612702565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508387828151811061220957612208612702565b5b6020026020010181815250508286828151811061222957612228612702565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b808061226f90612760565b91505061208e565b50808061228390612760565b91505061207f565b505050505050565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b508054600082559060005260206000209081019061235b91906123e8565b50565b8280548282559060005260206000209081019282156123d7579160200282015b828111156123d65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061237e565b5b5090506123e491906123e8565b5090565b5b808211156124015760008160009055506001016123e9565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061245c82612431565b9050919050565b61246c81612451565b82525050565b600061247e8383612463565b60208301905092915050565b6000602082019050919050565b60006124a282612405565b6124ac8185612410565b93506124b783612421565b8060005b838110156124e85781516124cf8882612472565b97506124da8361248a565b9250506001810190506124bb565b5085935050505092915050565b6000602082019050818103600083015261250f8184612497565b905092915050565b600080fd5b6000819050919050565b61252f8161251c565b811461253a57600080fd5b50565b60008135905061254c81612526565b92915050565b60006020828403121561256857612567612517565b5b60006125768482850161253d565b91505092915050565b6125888161251c565b82525050565b60006020820190506125a3600083018461257f565b92915050565b6125b281612451565b81146125bd57600080fd5b50565b6000813590506125cf816125a9565b92915050565b600080604083850312156125ec576125eb612517565b5b60006125fa858286016125c0565b925050602061260b8582860161253d565b9150509250929050565b61261e81612451565b82525050565b60006020820190506126396000830184612615565b92915050565b60006020828403121561265557612654612517565b5b6000612663848285016125c0565b91505092915050565b60008115159050919050565b6126818161266c565b82525050565b600060208201905061269c6000830184612678565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126dc8261251c565b91506126e78361251c565b9250826126f7576126f66126a2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061276b8261251c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361279d5761279c612731565b5b600182019050919050565b60006127b38261251c565b91506127be8361251c565b92508282039050818111156127d6576127d5612731565b5b92915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b60006128236014836127dc565b915061282e826127ed565b602082019050919050565b6000602082019050818103600083015261285281612816565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b600061288f6017836127dc565b915061289a82612859565b602082019050919050565b600060208201905081810360008301526128be81612882565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b60006128fb601b836127dc565b9150612906826128c5565b602082019050919050565b6000602082019050818103600083015261292a816128ee565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b60006129676019836127dc565b915061297282612931565b602082019050919050565b600060208201905081810360008301526129968161295a565b9050919050565b60006129a88261251c565b91506129b38361251c565b92508282019050808211156129cb576129ca612731565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050612a0f816125a9565b92915050565b600060208284031215612a2b57612a2a612517565b5b6000612a3984828501612a00565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612a9e6025836127dc565b9150612aa982612a42565b604082019050919050565b60006020820190508181036000830152612acd81612a91565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b6000612b0a6019836127dc565b9150612b1582612ad4565b602082019050919050565b60006020820190508181036000830152612b3981612afd565b9050919050565b6000612b4b8261251c565b9150612b568361251c565b925082612b6657612b656126a2565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b6000612ba76014836127dc565b9150612bb282612b71565b602082019050919050565b60006020820190508181036000830152612bd681612b9a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220dd1209f6bce6905836e56482f9c8afc689c7a7230969150d767efca23c93681e64736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static final String FUNC_GETREPUTATION = "getReputation";
  public static final String FUNC_GETVOTES = "getVotes";
  public static final String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static final String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider,
          final ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<BigInteger> getReputationCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETREPUTATION,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<BigInteger> getVotesCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVOTES,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          final Web3j web3j, final Credentials credentials, final ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS),
                    new Address(INITIAL_VALIDATOR), new Uint256(RepuHelpers.VOTATION_TIME))));
  }

  public void setProxyContract(final ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(final String address) throws Exception { return this.isValidatorCall(address).send(); }

  public BigInteger getReputation(final String address) throws Exception { return this.getReputationCall(address).send(); }

  public BigInteger getVotes(final String address) throws Exception { return this.getVotesCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(final String address, final BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(final String address, final BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
