/*
 * Copyright ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package org.hyperledger.besu.consensus.repu.contracts;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
public class RepuContract extends Contract {
  public static final String BINARY = "6080604052600a600b556001600c553480156200001b57600080fd5b50604051620034d6380380620034d6833981810160405281019062000041919062000899565b6200005281620000f460201b60201c565b620000626200019e60201b60201c565b600060088190555081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000aa1565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60005b6001805490508110156200029a576200020160018281548110620001ca57620001c9620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002c560201b60201c565b600080600184815481106200021b576200021a620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080620002919062000948565b915050620001a1565b50620002ab6200036560201b60201c565b60019080519060200190620002c292919062000781565b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003169190620009c4565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff1631620003469190620009c4565b620003529190620009c4565b6200035e9190620009fc565b9050919050565b6060600060018054905067ffffffffffffffff8111156200038b576200038a62000a37565b5b604051908082528060200260200182016040528015620003ba5781602001602082028036833780820191505090505b509050600060018054806020026020016040519081016040528092919081815260200182805480156200044357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620003f8575b5050505050905060005b600180549050811015620005135760008060018381548110620004755762000474620008e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110620004f157620004f0620008e0565b5b60200260200101818152505080806200050a9062000948565b9150506200044d565b506200052682826200052e60201b60201c565b809250505090565b60008251905060008060005b8381101562000779576000600190505b818562000558919062000a66565b8110156200076257868181518110620005765762000575620008e0565b5b6020026020010151876001836200058e919062000a66565b81518110620005a257620005a1620008e0565b5b602002602001015110156200074c5786600182620005c1919062000a66565b81518110620005d557620005d4620008e0565b5b6020026020010151935085600182620005ef919062000a66565b81518110620006035762000602620008e0565b5b60200260200101519250868181518110620006235762000622620008e0565b5b6020026020010151876001836200063b919062000a66565b815181106200064f576200064e620008e0565b5b602002602001018181525050858181518110620006715762000670620008e0565b5b60200260200101518660018362000689919062000a66565b815181106200069d576200069c620008e0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110620006ee57620006ed620008e0565b5b60200260200101818152505082868281518110620007115762000710620008e0565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080620007599062000948565b9150506200054a565b508080620007709062000948565b9150506200053a565b505050505050565b828054828255906000526020600020908101928215620007fd579160200282015b82811115620007fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620007a2565b5b5090506200080c919062000810565b5090565b5b808211156200082b57600081600090555060010162000811565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008618262000834565b9050919050565b620008738162000854565b81146200087f57600080fd5b50565b600081519050620008938162000868565b92915050565b60008060408385031215620008b357620008b26200082f565b5b6000620008c38582860162000882565b9250506020620008d68582860162000882565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000955826200093e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200098a57620009896200090f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620009d1826200093e565b9150620009de836200093e565b925082620009f157620009f062000995565b5b828204905092915050565b600062000a09826200093e565b915062000a16836200093e565b925082820190508082111562000a315762000a306200090f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600062000a73826200093e565b915062000a80836200093e565b925082820390508181111562000a9b5762000a9a6200090f565b5b92915050565b612a258062000ab16000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80639ab24eb0116100a2578063b7ab4db511610071578063b7ab4db51461027e578063b9137cca1461029c578063bdf3e088146102ba578063cdd72253146102d6578063facd743b146102f45761010b565b80639ab24eb0146101e65780639c89a0e2146102165780639cbfc76514610246578063b28fc600146102625761010b565b80633ea4fa47116100de5780633ea4fa47146101745780637b778b70146101905780637ed21005146101ac578063933a9ce8146101c85761010b565b806306a49fce146101105780631ba5eec01461012e5780632e97766d14610138578063360b97b914610156575b600080fd5b610118610324565b60405161012591906122d8565b60405180910390f35b6101366103b2565b005b61014061047e565b60405161014d9190612313565b60405180910390f35b61015e610486565b60405161016b91906122d8565b60405180910390f35b61018e6004803603810190610189919061235f565b610514565b005b6101aa60048036038101906101a591906123b8565b610578565b005b6101c660048036038101906101c191906123b8565b6109ee565b005b6101d0610a20565b6040516101dd9190612407565b60405180910390f35b61020060048036038101906101fb9190612422565b610a4a565b60405161020d9190612313565b60405180910390f35b610230600480360381019061022b9190612422565b610a93565b60405161023d9190612313565b60405180910390f35b610260600480360381019061025b9190612422565b610adb565b005b61027c6004803603810190610277919061235f565b610b49565b005b610286610bad565b60405161029391906122d8565b60405180910390f35b6102a4610c3b565b6040516102b191906122d8565b60405180910390f35b6102d460048036038101906102cf9190612422565b610e37565b005b6102de611017565b6040516102eb91906122d8565b60405180910390f35b61030e60048036038101906103099190612422565b6110a5565b60405161031b919061246a565b60405180910390f35b606060038054806020026020016040519081016040528092919081815260200182805480156103a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161035e575b5050505050905090565b6103bb336110a5565b806104135750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61041c57600080fd5b6008600081548092919061042f906124b4565b919050555060006005600161044261047e565b61044c91906124fc565b610456919061255f565b0361047c57610463611146565b60086000815480929190610476906124b4565b91905055505b565b600043905090565b6060600780548060200260200160405190810160405280929190818152602001828054801561050a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104c0575b5050505050905090565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056e57600080fd5b80600b8190555050565b6000600543610587919061255f565b146105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be906125ed565b60405180910390fd5b60048054905061065d33600480548060200260200160405190810160405280929190818152602001828054801561065357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610609575b505050505061126a565b1461069d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069490612659565b60405180910390fd5b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361070c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610703906126c5565b60405180910390fd5b826007805490506107a382600780548060200260200160405190810160405280929190818152602001828054801561079957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074f575b505050505061126a565b146107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90612731565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061083757610832846112f0565b6109e8565b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610989576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6109923361136e565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e09190612751565b925050819055505b50505050565b6109f66103b2565b60006005610a0261047e565b610a0c919061255f565b03610a1c57610a1b8282610578565b5b5050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3557600080fd5b610b3e81611406565b610b46611618565b50565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba357600080fd5b80600c8190555050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c3157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610be7575b5050505050905090565b60606000600180549050600854610c52919061255f565b905060008060018054905067ffffffffffffffff811115610c7657610c75612785565b5b604051908082528060200260200182016040528015610ca45781602001602082028036833780820191505090505b5090505b600180549050831015610d625760018381548110610cc957610cc86127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610d0757610d066127b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610d4c906124b4565b9350508180610d5a906124b4565b925050610ca8565b600092505b600180549050600854610d7a919061255f565b831015610e2e5760018381548110610d9557610d946127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381518110610dd357610dd26127b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508280610e18906124b4565b9350508180610e26906124b4565b925050610d67565b80935050505090565b8060008173ffffffffffffffffffffffffffffffffffffffff1663933a9ce86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea991906127f8565b90508073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3290612897565b60405180910390fd5b82610f4581611723565b610f84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7b90612903565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ed8f67f856040518263ffffffff1660e01b8152600401610fdf9190612407565b600060405180830381600087803b158015610ff957600080fd5b505af115801561100d573d6000803e3d6000fd5b5050505050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561109b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611051575b5050505050905090565b600060018054905061113d83600180548060200260200160405190810160405280929190818152602001828054801561113357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110e9575b505050505061126a565b14159050919050565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611191611746565b9050600360006111a19190612120565b60005b60048054905081101561124757600060026000600484815481106111cb576111ca6127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061123f906124b4565b9150506111a4565b50600460006112569190612120565b61125f8161194b565b611267611618565b50565b600080600090505b82518110156112e4578373ffffffffffffffffffffffffffffffffffffffff168382815181106112a5576112a46127b4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036112d157809150506112ea565b80806112dc906124b4565b915050611272565b50815190505b92915050565b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061135c816110a5565b1561136b5761136a81611406565b5b50565b6000600c54600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113bd9190612923565b600b54670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff16316113eb9190612923565b6113f59190612923565b6113ff9190612751565b9050919050565b600061149882600180548060200260200160405190810160405280929190818152602001828054801561148e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611444575b505050505061126a565b905060018054905081106114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d8906129a0565b60405180910390fd5b60018080805490506114f391906124fc565b81548110611504576115036127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110611543576115426127b4565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548061159d5761159c6129c0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60005b6001805490508110156117025761166f6001828154811061163f5761163e6127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661136e565b60008060018481548110611686576116856127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806116fa906124b4565b91505061161b565b5061170b611ca5565b60019080519060200190611720929190612141565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060600060038054905067ffffffffffffffff81111561176957611768612785565b5b6040519080825280602002602001820160405280156117975781602001602082028036833780820191505090505b509050600060038054905067ffffffffffffffff8111156117bb576117ba612785565b5b6040519080825280602002602001820160405280156117e95781602001602082028036833780820191505090505b50905060005b600380549050811015611938576002600060038381548110611814576118136127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483828151811061188d5761188c6127b4565b5b602002602001018181525050600381815481106118ad576118ac6127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106118eb576118ea6127b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080611930906124b4565b9150506117ef565b506119438282611e56565b809250505090565b6000805b82518110801561195f5750600582105b15611b8f5760006006600085848151811061197d5761197c6127b4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015611a7a5750600780549050611a788483815181106119e4576119e36127b4565b5b60200260200101516007805480602002602001604051908101604052809291908181526020018280548015611a6e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a24575b505050505061126a565b145b8015611ab757506000838281518110611a9657611a956127b4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631115b15611b7c57611adf838281518110611ad257611ad16127b4565b5b60200260200101516110a5565b15611b0c57611b07838281518110611afa57611af96127b4565b5b6020026020010151611406565b611b6d565b600581600180549050611b1f9190612751565b03611b6c576001805480611b3657611b356129c0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b5b8180611b78906124b4565b9250505b8080611b87906124b4565b91505061194f565b5060005b825181108015611ba35750600581105b15611ca057600060066000858481518110611bc157611bc06127b4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611c8d57611c2d838281518110611c2057611c1f6127b4565b5b6020026020010151612076565b600060026000858481518110611c4657611c456127b4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080611c98906124b4565b915050611b93565b505050565b6060600060018054905067ffffffffffffffff811115611cc857611cc7612785565b5b604051908082528060200260200182016040528015611cf65781602001602082028036833780820191505090505b50905060006001805480602002602001604051908101604052809291908181526020018280548015611d7d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d33575b5050505050905060005b600180549050811015611e435760008060018381548110611dab57611daa6127b4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054838281518110611e2457611e236127b4565b5b6020026020010181815250508080611e3b906124b4565b915050611d87565b50611e4e8282611e56565b809250505090565b60008251905060008060005b8381101561206e576000600190505b8185611e7d91906124fc565b81101561205a57868181518110611e9757611e966127b4565b5b602002602001015187600183611ead91906124fc565b81518110611ebe57611ebd6127b4565b5b602002602001015110156120475786600182611eda91906124fc565b81518110611eeb57611eea6127b4565b5b6020026020010151935085600182611f0391906124fc565b81518110611f1457611f136127b4565b5b60200260200101519250868181518110611f3157611f306127b4565b5b602002602001015187600183611f4791906124fc565b81518110611f5857611f576127b4565b5b602002602001018181525050858181518110611f7757611f766127b4565b5b602002602001015186600183611f8d91906124fc565b81518110611f9e57611f9d6127b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083878281518110611fec57611feb6127b4565b5b6020026020010181815250508286828151811061200c5761200b6127b4565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080612052906124b4565b915050611e71565b508080612066906124b4565b915050611e62565b505050505050565b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b508054600082559060005260206000209081019061213e91906121cb565b50565b8280548282559060005260206000209081019282156121ba579160200282015b828111156121b95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612161565b5b5090506121c791906121cb565b5090565b5b808211156121e45760008160009055506001016121cc565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061223f82612214565b9050919050565b61224f81612234565b82525050565b60006122618383612246565b60208301905092915050565b6000602082019050919050565b6000612285826121e8565b61228f81856121f3565b935061229a83612204565b8060005b838110156122cb5781516122b28882612255565b97506122bd8361226d565b92505060018101905061229e565b5085935050505092915050565b600060208201905081810360008301526122f2818461227a565b905092915050565b6000819050919050565b61230d816122fa565b82525050565b60006020820190506123286000830184612304565b92915050565b600080fd5b61233c816122fa565b811461234757600080fd5b50565b60008135905061235981612333565b92915050565b6000602082840312156123755761237461232e565b5b60006123838482850161234a565b91505092915050565b61239581612234565b81146123a057600080fd5b50565b6000813590506123b28161238c565b92915050565b600080604083850312156123cf576123ce61232e565b5b60006123dd858286016123a3565b92505060206123ee8582860161234a565b9150509250929050565b61240181612234565b82525050565b600060208201905061241c60008301846123f8565b92915050565b6000602082840312156124385761243761232e565b5b6000612446848285016123a3565b91505092915050565b60008115159050919050565b6124648161244f565b82525050565b600060208201905061247f600083018461245b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124bf826122fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124f1576124f0612485565b5b600182019050919050565b6000612507826122fa565b9150612512836122fa565b925082820390508181111561252a57612529612485565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061256a826122fa565b9150612575836122fa565b92508261258557612584612530565b5b828206905092915050565b600082825260208201905092915050565b7f4e6f7420696e20766f746174696f6e2074696d65000000000000000000000000600082015250565b60006125d7601483612590565b91506125e2826125a1565b602082019050919050565b60006020820190508181036000830152612606816125ca565b9050919050565b7f566f746520616c72656164792072656769737465726564000000000000000000600082015250565b6000612643601783612590565b915061264e8261260d565b602082019050919050565b6000602082019050818103600083015261267281612636565b9050919050565b7f41206e6f64652063616e206e6f7420766f74652068696d73656c660000000000600082015250565b60006126af601b83612590565b91506126ba82612679565b602082019050919050565b600060208201905081810360008301526126de816126a2565b9050919050565b7f4164647265737320696e2074686520626c61636b206c69737400000000000000600082015250565b600061271b601983612590565b9150612726826126e5565b602082019050919050565b6000602082019050818103600083015261274a8161270e565b9050919050565b600061275c826122fa565b9150612767836122fa565b925082820190508082111561277f5761277e612485565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506127f28161238c565b92915050565b60006020828403121561280e5761280d61232e565b5b600061281c848285016127e3565b91505092915050565b7f436f6e74726163742070726f78792061646472657373206973206e6f7420636f60008201527f7272656374000000000000000000000000000000000000000000000000000000602082015250565b6000612881602583612590565b915061288c82612825565b604082019050919050565b600060208201905081810360008301526128b081612874565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b60006128ed601983612590565b91506128f8826128b7565b602082019050919050565b6000602082019050818103600083015261291c816128e0565b9050919050565b600061292e826122fa565b9150612939836122fa565b92508261294957612948612530565b5b828204905092915050565b7f56616c696461746f72206e6f7420666f756e642e000000000000000000000000600082015250565b600061298a601483612590565b915061299582612954565b602082019050919050565b600060208201905081810360008301526129b98161297d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220575875376dad6b1725a4ccdc043f86ae212aab272e693ab9fb53bb438aec22eb64736f6c63430008120033";
  public static final String FUNC_NEXTVALIDATORS = "nextValidators";
  public static final String FUNC_ISVALIDATOR = "isValidator";
  public static final String FUNC_GETVALIDATORS = "getValidators";
  public static final String FUNC_VOTEVALIDATOR = "voteValidator";
  public static final String FUNC_NEXTTURN = "nextTurn";
  public static final String FUNC_NEXTTURNANDVOTE = "nextTurnAndVote";
  public static final String FUNC_GETBLOCK = "getBlock";
  public static final String FUNC_GETREPUTATION = "getReputation";
  public static final String FUNC_GETVOTES = "getVotes";
  public static final String INITIAL_ADDRESS = "0xb624d87403ac9f170ea9678a07051adc6fd7dc16";
  public static final String INITIAL_VALIDATOR = "0x1c21335d5e5d3f675d7eb7e19e943535555bb291";
  private ProxyContract proxyContract;

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider,
          final ProxyContract proxyContract) {
    this(contractAddress, web3j, credentials, contractGasProvider);
    this.proxyContract = proxyContract;
  }

  public RepuContract(
          final String contractAddress,
          final Web3j web3j,
          final Credentials credentials,
          final ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  private RemoteFunctionCall<List> nextValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<Boolean> isValidatorCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_ISVALIDATOR,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  private RemoteFunctionCall<BigInteger> getReputationCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETREPUTATION,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<BigInteger> getVotesCall(final String address) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVOTES,
                    Collections.singletonList(new Address(address)),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  private RemoteFunctionCall<List> getValidatorsCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETVALIDATORS,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<DynamicArray<Address>>() {}));
    return new RemoteFunctionCall<>(
            function,
            () -> {
              List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
              return convertToNative(result);
            });
  }

  private RemoteFunctionCall<TransactionReceipt> voteValidatorCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_VOTEVALIDATOR,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnAndVoteCall(final String address, final BigInteger nonce) {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURNANDVOTE,
                    Arrays.asList(new Address(address), new Uint256(nonce)),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<TransactionReceipt> nextTurnCall() {
    this.checkAddress();
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_NEXTTURN,
                    Collections.emptyList(),
                    Collections.emptyList());
    return executeRemoteCallTransaction(function);
  }

  private RemoteFunctionCall<BigInteger> getBlockCall() {
    final org.web3j.abi.datatypes.Function function =
            new org.web3j.abi.datatypes.Function(
                    FUNC_GETBLOCK,
                    Collections.emptyList(),
                    Collections.singletonList(new TypeReference<Uint256>() {}));
    return executeRemoteCallSingleValueReturn(function, BigInteger.class);
  }

  public static RemoteCall<RepuContract> deploy(
          final Web3j web3j, final Credentials credentials, final ContractGasProvider contractGasProvider) {
    return deployRemoteCall(
            RepuContract.class,
            web3j,
            credentials,
            contractGasProvider,
            BINARY,
            FunctionEncoder.encodeConstructor(Arrays.asList(new Address(ProxyContract.ADDRESS), new Address(INITIAL_VALIDATOR))));
  }

  public void setProxyContract(final ProxyContract proxyContract) {
    this.proxyContract = proxyContract;
  }

  private void checkAddress(){
    if(!Objects.equals(proxyContract.getContractAddress(), this.getContractAddress())) {
      try {
        this.setContractAddress(proxyContract.getConsensusAddress());
      } catch (Exception e) {
        throw new RuntimeException(e);
      }
    }
  }

  public List<String> nextValidators() throws Exception { return this.nextValidatorsCall().send(); }

  public Boolean isValidator(final String address) throws Exception { return this.isValidatorCall(address).send(); }

  public BigInteger getReputation(final String address) throws Exception { return this.getReputationCall(address).send(); }

  public BigInteger getVotes(final String address) throws Exception { return this.getVotesCall(address).send(); }

  public List<String> getValidators() throws Exception { return this.getValidatorsCall().send(); }

  public void voteValidator(final String address, final BigInteger nonce) throws Exception { this.voteValidatorCall(address, nonce).send(); }

  public void nextTurnAndVote(final String address, final BigInteger nonce) throws Exception { this.nextTurnAndVoteCall(address, nonce).send(); }

  public void nextTurn() throws Exception { this.nextTurnCall().send(); }

  public long getBlock() throws Exception { return this.getBlockCall().send().longValue(); }




}
